{"version":3,"file":"TableRow.styles.js","sources":["../../../../src/Table/TableRow/TableRow.styles.tsx"],"sourcesContent":["import { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { createClasses } from \"../../utils/classes\";\n\nimport { getBorderStyles } from \"../utils/utils\";\n\nexport const { staticClasses, useClasses } = createClasses(\"HvTableRow\", {\n  /** Styles applied to the component root class. */\n  root: {\n    color: \"inherit\",\n    backgroundColor: theme.colors.atmo1,\n    verticalAlign: \"middle\",\n    outline: 0,\n  },\n  /** Styles applied to the component root when inside a `HvTableHead`. */\n  head: {},\n  /** Styles applied to the component root when inside a `HvTableBody`. */\n  body: {},\n  /** Styles applied to the component root when inside a `HvTableFooter`. */\n  footer: {},\n  /** Styles applied to the component root when selected. */\n  selected: {\n    backgroundColor: theme.colors.atmo2,\n  },\n  /** Styles applied to the component root when expanded. */\n  expanded: {\n    backgroundColor: theme.colors.atmo1,\n    \"& > *[role=cell]\": {\n      borderBottom: \"none\",\n    },\n  },\n  /** Styles applied to the component root when striped. */\n  striped: {\n    \"&:nth-of-type(even)\": {\n      backgroundColor: theme.alpha(\"atmo1\", 0.6),\n\n      \"&:hover\": {\n        backgroundColor: theme.colors.containerBackgroundHover,\n      },\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"transparent\",\n\n      \"&:hover\": {\n        backgroundColor: theme.colors.containerBackgroundHover,\n      },\n    },\n  },\n  /** Styles applied to the component root on hover. */\n  hover: {\n    transition: \"background-color 150ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n    \"&:hover\": {\n      backgroundColor: theme.colors.containerBackgroundHover,\n    },\n  },\n  /** Styles applied to the component root when its table variant is list. */\n  variantList: {\n    // only applied on custom `display`\n    marginBottom: theme.space.xs,\n    borderRadius: theme.radii.round,\n\n    ...getBorderStyles(theme.colors.atmo4, theme.radii.round),\n    backgroundColor: theme.colors.atmo1,\n    \"&$selected\": {\n      ...getBorderStyles(theme.colors.secondary, theme.radii.round),\n\n      \"&:hover\": {\n        ...getBorderStyles(theme.colors.atmo4, theme.radii.round),\n      },\n    },\n\n    \"&:hover\": {\n      ...getBorderStyles(theme.colors.atmo4, theme.radii.round),\n    },\n    \"&.HvIsFocused\": {\n      borderRadius: theme.radii.round,\n    },\n  },\n  /** Styles applied to the component root when its table variant is list. */\n  variantListHead: {\n    backgroundColor: \"transparent\",\n  },\n});\n"],"names":[],"mappings":";;;AAMO,MAAM,EAAE,eAAe,eAAe,cAAc,cAAc;AAAA;AAAA,EAEvE,MAAM;AAAA,IACJ,OAAO;AAAA,IACP,iBAAiB,MAAM,OAAO;AAAA,IAC9B,eAAe;AAAA,IACf,SAAS;AAAA,EACX;AAAA;AAAA,EAEA,MAAM,CAAC;AAAA;AAAA,EAEP,MAAM,CAAC;AAAA;AAAA,EAEP,QAAQ,CAAC;AAAA;AAAA,EAET,UAAU;AAAA,IACR,iBAAiB,MAAM,OAAO;AAAA,EAChC;AAAA;AAAA,EAEA,UAAU;AAAA,IACR,iBAAiB,MAAM,OAAO;AAAA,IAC9B,oBAAoB;AAAA,MAClB,cAAc;AAAA,IAChB;AAAA,EACF;AAAA;AAAA,EAEA,SAAS;AAAA,IACP,uBAAuB;AAAA,MACrB,iBAAiB,MAAM,MAAM,SAAS,GAAG;AAAA,MAEzC,WAAW;AAAA,QACT,iBAAiB,MAAM,OAAO;AAAA,MAChC;AAAA,IACF;AAAA,IACA,sBAAsB;AAAA,MACpB,iBAAiB;AAAA,MAEjB,WAAW;AAAA,QACT,iBAAiB,MAAM,OAAO;AAAA,MAChC;AAAA,IACF;AAAA,EACF;AAAA;AAAA,EAEA,OAAO;AAAA,IACL,YAAY;AAAA,IACZ,WAAW;AAAA,MACT,iBAAiB,MAAM,OAAO;AAAA,IAChC;AAAA,EACF;AAAA;AAAA,EAEA,aAAa;AAAA;AAAA,IAEX,cAAc,MAAM,MAAM;AAAA,IAC1B,cAAc,MAAM,MAAM;AAAA,IAE1B,GAAG,gBAAgB,MAAM,OAAO,OAAO,MAAM,MAAM,KAAK;AAAA,IACxD,iBAAiB,MAAM,OAAO;AAAA,IAC9B,cAAc;AAAA,MACZ,GAAG,gBAAgB,MAAM,OAAO,WAAW,MAAM,MAAM,KAAK;AAAA,MAE5D,WAAW;AAAA,QACT,GAAG,gBAAgB,MAAM,OAAO,OAAO,MAAM,MAAM,KAAK;AAAA,MAC1D;AAAA,IACF;AAAA,IAEA,WAAW;AAAA,MACT,GAAG,gBAAgB,MAAM,OAAO,OAAO,MAAM,MAAM,KAAK;AAAA,IAC1D;AAAA,IACA,iBAAiB;AAAA,MACf,cAAc,MAAM,MAAM;AAAA,IAC5B;AAAA,EACF;AAAA;AAAA,EAEA,iBAAiB;AAAA,IACf,iBAAiB;AAAA,EACnB;AACF,CAAC;"}