{"version":3,"file":"useTimeAgo.js","sources":["../../../src/TimeAgo/useTimeAgo.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nimport type { HvTimeAgoProps } from \"./TimeAgo\";\nimport { useTimeout } from \"./useTimeout\";\nimport { formatTimeAgo } from \"./formatUtils\";\n\n/**\n * Calls `formatTimeAgo` with timestamp conversion\n */\nconst fmt = (timestamp: any, locale: any, showSeconds?: boolean) => {\n  const timestampMs =\n    String(timestamp).length > 11 ? timestamp : timestamp * 1000;\n  return formatTimeAgo(new Date(timestampMs), locale, showSeconds);\n};\n\nexport default function useTimeAgo(\n  timestamp: number | undefined,\n  options?: Pick<HvTimeAgoProps, \"locale\" | \"disableRefresh\" | \"showSeconds\">\n) {\n  const { locale, disableRefresh = false, showSeconds = false } = options || {};\n  const [timeAgo, setTimeAgo] = useState(fmt(timestamp, locale, showSeconds));\n  const refreshTime = disableRefresh ? 0 : timeAgo.delay * 1000;\n\n  useEffect(() => {\n    const newTimeAgo = fmt(timestamp, locale, showSeconds);\n    setTimeAgo(newTimeAgo);\n  }, [timestamp, locale, showSeconds]);\n\n  useTimeout(() => {\n    const newTimeAgo = fmt(timestamp, locale, showSeconds);\n    setTimeAgo(newTimeAgo);\n  }, refreshTime);\n\n  return timeAgo.timeAgo;\n}\n"],"names":[],"mappings":";;;AASA,MAAM,MAAM,CAAC,WAAgB,QAAa,gBAA0B;AAClE,QAAM,cACJ,OAAO,SAAS,EAAE,SAAS,KAAK,YAAY,YAAY;AAC1D,SAAO,cAAc,IAAI,KAAK,WAAW,GAAG,QAAQ,WAAW;AACjE;AAEwB,SAAA,WACtB,WACA,SACA;AACM,QAAA,EAAE,QAAQ,iBAAiB,OAAO,cAAc,MAAM,IAAI,WAAW;AACrE,QAAA,CAAC,SAAS,UAAU,IAAI,SAAS,IAAI,WAAW,QAAQ,WAAW,CAAC;AAC1E,QAAM,cAAc,iBAAiB,IAAI,QAAQ,QAAQ;AAEzD,YAAU,MAAM;AACd,UAAM,aAAa,IAAI,WAAW,QAAQ,WAAW;AACrD,eAAW,UAAU;AAAA,EACpB,GAAA,CAAC,WAAW,QAAQ,WAAW,CAAC;AAEnC,aAAW,MAAM;AACf,UAAM,aAAa,IAAI,WAAW,QAAQ,WAAW;AACrD,eAAW,UAAU;AAAA,KACpB,WAAW;AAEd,SAAO,QAAQ;AACjB;"}