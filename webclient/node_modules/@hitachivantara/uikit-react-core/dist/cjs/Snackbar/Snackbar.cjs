"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Slide = require("@mui/material/Slide");
const Snackbar = require("@mui/material/Snackbar");
const capitalize = require("lodash/capitalize");
const setId = require("../utils/setId.cjs");
const Snackbar_styles = require("./Snackbar.styles.cjs");
const SnackbarContent = require("./SnackbarContent/SnackbarContent.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const Slide__default = /* @__PURE__ */ _interopDefault(Slide);
const Snackbar__default = /* @__PURE__ */ _interopDefault(Snackbar);
const capitalize__default = /* @__PURE__ */ _interopDefault(capitalize);
const HvSnackbar = ({
  classes: classesProp,
  className,
  id,
  open = false,
  onClose,
  label = "",
  anchorOrigin = { vertical: "top", horizontal: "right" },
  autoHideDuration = 5e3,
  variant = "default",
  showIcon = false,
  customIcon = null,
  action = null,
  actionCallback,
  transitionDuration = 300,
  transitionDirection = "left",
  container,
  offset = 60,
  snackbarContentProps,
  ...others
}) => {
  const { classes } = Snackbar_styles.useClasses(classesProp);
  const anchorOriginOffset = {
    anchorOriginTop: {
      top: `${offset}px`
    },
    anchorOriginBottom: {
      bottom: `${offset}px`
    }
  };
  const SlideTransition = React.useCallback(
    (properties) => /* @__PURE__ */ jsxRuntime.jsx(
      Slide__default.default,
      {
        ...properties,
        container,
        direction: transitionDirection
      }
    ),
    [container, transitionDirection]
  );
  return /* @__PURE__ */ jsxRuntime.jsx(
    Snackbar__default.default,
    {
      style: anchorOriginOffset[`anchorOrigin${capitalize__default.default(anchorOrigin.vertical)}`],
      classes,
      className,
      id,
      anchorOrigin,
      open,
      onClose,
      autoHideDuration,
      transitionDuration,
      TransitionComponent: SlideTransition,
      ...others,
      children: /* @__PURE__ */ jsxRuntime.jsx(
        SnackbarContent.HvSnackbarContent,
        {
          id: setId.setId(id, "content"),
          label,
          variant,
          customIcon,
          showIcon,
          action,
          actionCallback,
          ...snackbarContentProps
        }
      )
    }
  );
};
exports.snackbarClasses = Snackbar_styles.staticClasses;
exports.HvSnackbar = HvSnackbar;
