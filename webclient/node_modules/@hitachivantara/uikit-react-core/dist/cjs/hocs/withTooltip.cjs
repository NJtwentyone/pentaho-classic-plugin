"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const Tooltip = require("../Tooltip/Tooltip.cjs");
const styles = {
  truncate: {
    overflow: "hidden",
    textOverflow: "ellipsis",
    whiteSpace: "nowrap"
  }
};
const withTooltip = (Component, label = "", placement, hideTooltip, tooltipProps, tooltipContainerProps) => (props) => {
  const [isHoverDisabled, setIsHoverDisabled] = React.useState(
    false
  );
  const [open, setOpen] = React.useState(false);
  const handleMouseEnter = (event) => {
    const isHidden = hideTooltip?.(event);
    setIsHoverDisabled(isHidden);
    setOpen(!isHidden);
  };
  const handleMouseLeave = () => {
    setIsHoverDisabled(false);
    setOpen(false);
  };
  return /* @__PURE__ */ jsxRuntime.jsx(
    Tooltip.HvTooltip,
    {
      style: { ...styles.truncate },
      disableHoverListener: isHoverDisabled,
      disableFocusListener: true,
      disableTouchListener: true,
      title: label,
      open,
      placement,
      ...tooltipProps,
      children: /* @__PURE__ */ jsxRuntime.jsx(
        "div",
        {
          ...tooltipContainerProps,
          onMouseEnter: handleMouseEnter,
          onMouseLeave: handleMouseLeave,
          children: /* @__PURE__ */ jsxRuntime.jsx(Component, { ...props })
        }
      )
    }
  );
};
exports.withTooltip = withTooltip;
