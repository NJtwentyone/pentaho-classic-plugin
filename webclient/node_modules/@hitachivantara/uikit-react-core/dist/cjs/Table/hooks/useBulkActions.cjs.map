{"version":3,"file":"useBulkActions.cjs","sources":["../../../../src/Table/hooks/useBulkActions.ts"],"sourcesContent":["import { useCallback } from \"react\";\nimport {\n  Hooks,\n  PropGetter,\n  TableCommonProps,\n  makePropGetter,\n  useGetLatest,\n  ensurePluginOrder,\n} from \"react-table\";\n\n// #region ##### TYPES #####\n\n// TODO: fix typo in v6\nexport interface HvTAbleBulkActionsProps extends TableCommonProps {\n  numTotal: number;\n  numSelected: number;\n  showSelectAllPages: boolean;\n  onSelectAll: () => void;\n  onSelectAllPages: () => void;\n  labels?: Record<string, string>;\n}\n\nexport type HvBulkActionsPropGetter<D extends object> = PropGetter<\n  D,\n  HvTAbleBulkActionsProps\n>;\n\nexport interface UseHvBulkActionsHooks<D extends object> {\n  getHvBulkActionsProps: Array<HvBulkActionsPropGetter<D>>;\n}\n\nexport type UseHvBulkActionsTableOptions = {\n  // TODO: fix typo in v6\n  /** Controls whether the \"Select all\" should _select_ or _unselect_ the rows, in a partial selection state. */\n  aditivePageBulkSelection?: boolean;\n  /** Controls whether _only the current page_ or _all pages_ should be unselected */\n  subtractivePageBulkDeselection?: boolean;\n  showSelectAllPages?: boolean;\n};\n\nexport interface UseHvBulkActionsTableInstanceProps<D extends object> {\n  getHvBulkActionsProps: (\n    propGetter?: HvBulkActionsPropGetter<D>\n  ) => HvTAbleBulkActionsProps;\n  invertedToggleAllRowsSelected: () => void;\n}\n\nexport type UseBulkActionsProps = (<D extends object = Record<string, unknown>>(\n  hooks: Hooks<D>\n) => void) & { pluginName: string };\n\n// #endregion ##### TYPES #####\n\nconst useInstanceHook = (instance) => {\n  const { plugins, page, toggleAllPageRowsSelected, toggleAllRowsSelected } =\n    instance;\n\n  ensurePluginOrder(plugins, [\"useHvRowSelection\"], \"useHvBulkActions\");\n\n  const getInstance = useGetLatest(instance);\n\n  const getHvBulkActionsProps = makePropGetter(\n    instance.getHooks().getHvBulkActionsProps,\n    {\n      instance: getInstance(),\n    }\n  );\n\n  const isPaginated = !!page;\n\n  const invertedToggleAllRowsSelected = useCallback(() => {\n    if (!isPaginated) return toggleAllRowsSelected();\n\n    const {\n      aditivePageBulkSelection: additivePageBulkSelection,\n      subtractivePageBulkDeselection,\n      isNoRowsSelected,\n      isNoPageRowsSelected,\n      isAllSelectablePageRowsSelected,\n      isAllSelectablePageRowsUnselected,\n    } = getInstance();\n\n    if (additivePageBulkSelection && subtractivePageBulkDeselection) {\n      return toggleAllPageRowsSelected(!isAllSelectablePageRowsSelected);\n    }\n\n    if (additivePageBulkSelection && !subtractivePageBulkDeselection) {\n      if (!isAllSelectablePageRowsSelected) {\n        return toggleAllPageRowsSelected(true);\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    if (!additivePageBulkSelection && !subtractivePageBulkDeselection) {\n      if (isNoRowsSelected) {\n        return toggleAllPageRowsSelected(true);\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    if (!additivePageBulkSelection && subtractivePageBulkDeselection) {\n      if (isNoRowsSelected) {\n        return toggleAllPageRowsSelected(true);\n      }\n      if (!isAllSelectablePageRowsUnselected) {\n        return toggleAllPageRowsSelected(false);\n      }\n      if (!isNoPageRowsSelected) {\n        return toggleAllPageRowsSelected(false);\n      }\n\n      return toggleAllRowsSelected(false);\n    }\n\n    return toggleAllPageRowsSelected();\n  }, [\n    getInstance,\n    isPaginated,\n    toggleAllPageRowsSelected,\n    toggleAllRowsSelected,\n  ]);\n\n  Object.assign(instance, {\n    getHvBulkActionsProps,\n    invertedToggleAllRowsSelected,\n    aditivePageBulkSelection: !!instance.aditivePageBulkSelection,\n    subtractivePageBulkDeselection: !!instance.subtractivePageBulkDeselection,\n  });\n};\n\n// TODO: fix typo in v6\nexport const defaultgetHvBulkActionsProps = (props, { instance }) => {\n  const {\n    rows,\n    initialRows,\n    selectedFlatRows,\n    state: { selectedRowIds = {} } = {},\n    page,\n    toggleAllRowsSelected,\n    invertedToggleAllRowsSelected,\n    showSelectAllPages = true,\n    applyToggleAllRowsSelectedToPrefilteredRows,\n  } = instance;\n\n  const isPaginated = !!page;\n\n  const nextProps: HvTAbleBulkActionsProps = {\n    numTotal: applyToggleAllRowsSelectedToPrefilteredRows\n      ? initialRows.length\n      : rows.length,\n    numSelected: applyToggleAllRowsSelectedToPrefilteredRows\n      ? Object.keys(selectedRowIds).length\n      : selectedFlatRows.length,\n    showSelectAllPages: showSelectAllPages && isPaginated,\n    onSelectAll: invertedToggleAllRowsSelected,\n    onSelectAllPages: toggleAllRowsSelected,\n  };\n\n  return [props, nextProps];\n};\n\nconst useBulkActions: UseBulkActionsProps = (hooks) => {\n  hooks.getHvBulkActionsProps = [defaultgetHvBulkActionsProps];\n\n  hooks.useInstance.push(useInstanceHook);\n};\n\nuseBulkActions.pluginName = \"useHvBulkActions\";\n\nexport default useBulkActions;\n"],"names":["ensurePluginOrder","useGetLatest","makePropGetter","useCallback"],"mappings":";;;;AAqDA,MAAM,kBAAkB,CAAC,aAAa;AACpC,QAAM,EAAE,SAAS,MAAM,2BAA2B,0BAChD;AAEFA,aAAAA,kBAAkB,SAAS,CAAC,mBAAmB,GAAG,kBAAkB;AAE9D,QAAA,cAAcC,wBAAa,QAAQ;AAEzC,QAAM,wBAAwBC,WAAA;AAAA,IAC5B,SAAS,WAAW;AAAA,IACpB;AAAA,MACE,UAAU,YAAY;AAAA,IACxB;AAAA,EAAA;AAGI,QAAA,cAAc,CAAC,CAAC;AAEhB,QAAA,gCAAgCC,MAAAA,YAAY,MAAM;AACtD,QAAI,CAAC;AAAa,aAAO,sBAAsB;AAEzC,UAAA;AAAA,MACJ,0BAA0B;AAAA,MAC1B;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,QACE,YAAY;AAEhB,QAAI,6BAA6B,gCAAgC;AACxD,aAAA,0BAA0B,CAAC,+BAA+B;AAAA,IACnE;AAEI,QAAA,6BAA6B,CAAC,gCAAgC;AAChE,UAAI,CAAC,iCAAiC;AACpC,eAAO,0BAA0B,IAAI;AAAA,MACvC;AAEA,aAAO,sBAAsB,KAAK;AAAA,IACpC;AAEI,QAAA,CAAC,6BAA6B,CAAC,gCAAgC;AACjE,UAAI,kBAAkB;AACpB,eAAO,0BAA0B,IAAI;AAAA,MACvC;AAEA,aAAO,sBAAsB,KAAK;AAAA,IACpC;AAEI,QAAA,CAAC,6BAA6B,gCAAgC;AAChE,UAAI,kBAAkB;AACpB,eAAO,0BAA0B,IAAI;AAAA,MACvC;AACA,UAAI,CAAC,mCAAmC;AACtC,eAAO,0BAA0B,KAAK;AAAA,MACxC;AACA,UAAI,CAAC,sBAAsB;AACzB,eAAO,0BAA0B,KAAK;AAAA,MACxC;AAEA,aAAO,sBAAsB,KAAK;AAAA,IACpC;AAEA,WAAO,0BAA0B;AAAA,EAAA,GAChC;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAED,SAAO,OAAO,UAAU;AAAA,IACtB;AAAA,IACA;AAAA,IACA,0BAA0B,CAAC,CAAC,SAAS;AAAA,IACrC,gCAAgC,CAAC,CAAC,SAAS;AAAA,EAAA,CAC5C;AACH;AAGO,MAAM,+BAA+B,CAAC,OAAO,EAAE,eAAe;AAC7D,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,OAAO,EAAE,iBAAiB,CAAC,EAAA,IAAM,CAAC;AAAA,IAClC;AAAA,IACA;AAAA,IACA;AAAA,IACA,qBAAqB;AAAA,IACrB;AAAA,EACE,IAAA;AAEE,QAAA,cAAc,CAAC,CAAC;AAEtB,QAAM,YAAqC;AAAA,IACzC,UAAU,8CACN,YAAY,SACZ,KAAK;AAAA,IACT,aAAa,8CACT,OAAO,KAAK,cAAc,EAAE,SAC5B,iBAAiB;AAAA,IACrB,oBAAoB,sBAAsB;AAAA,IAC1C,aAAa;AAAA,IACb,kBAAkB;AAAA,EAAA;AAGb,SAAA,CAAC,OAAO,SAAS;AAC1B;AAEA,MAAM,iBAAsC,CAAC,UAAU;AAC/C,QAAA,wBAAwB,CAAC,4BAA4B;AAErD,QAAA,YAAY,KAAK,eAAe;AACxC;AAEA,eAAe,aAAa;AAE5B,MAAA,mBAAe;;;"}