"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const classes = require("../utils/classes.cjs");
const TableContainer_styles = require("../Table/TableContainer/TableContainer.styles.cjs");
require("../Table/TableContainer/TableContainer.cjs");
const TableHeader_styles = require("../Table/TableHeader/TableHeader.styles.cjs");
require("../Table/TableHeader/TableHeader.cjs");
const TableRow_styles = require("../Table/TableRow/TableRow.styles.cjs");
require("../Table/TableRow/TableRow.cjs");
const TableCell_styles = require("../Table/TableCell/TableCell.styles.cjs");
require("../Table/TableCell/TableCell.cjs");
const BulkActions_styles = require("../BulkActions/BulkActions.styles.cjs");
require("@emotion/react/jsx-runtime");
const Pagination_styles = require("../Pagination/Pagination.styles.cjs");
require("react");
require("@mui/material/Hidden");
require("@hitachivantara/uikit-react-icons");
const { staticClasses, useClasses } = classes.createClasses("HvTableSection", {
  root: {},
  header: {
    // Only apply the border to divide the header and content when both are displayed
    "+ div": { borderTop: `1px solid ${uikitStyles.theme.colors.atmo3}` }
  },
  actions: {
    right: uikitStyles.theme.space.sm
  },
  content: {
    marginTop: 0,
    padding: 0,
    // Apply border radius to the first child if there's not an header
    "&:first-of-type": {
      "& > :first-of-type": {
        borderTopLeftRadius: uikitStyles.theme.radii.round,
        borderTopRightRadius: uikitStyles.theme.radii.round
      }
    },
    "& > :last-child": {
      borderBottomLeftRadius: uikitStyles.theme.radii.round,
      borderBottomRightRadius: uikitStyles.theme.radii.round
    },
    [`& .${TableContainer_styles.staticClasses.root}`]: {
      paddingBottom: 0
    },
    [`& .${TableHeader_styles.staticClasses.head}`]: {
      backgroundColor: uikitStyles.theme.colors.atmo2,
      borderBottomColor: uikitStyles.theme.colors.atmo3,
      [`&.${TableHeader_styles.staticClasses.variantCheckbox}`]: {
        borderRight: "none"
      },
      [`&.${TableHeader_styles.staticClasses.variantActions}`]: {
        borderLeft: "none"
      }
    },
    // Remove border for the last table row
    [`& .${TableRow_styles.staticClasses.root}`]: {
      "&:last-child": {
        [`& .${TableCell_styles.staticClasses.root}`]: { borderBottom: "none" }
      }
    },
    [`& .${TableCell_styles.staticClasses.root}`]: {
      borderBottomColor: uikitStyles.theme.colors.atmo3
    },
    [`& .${TableCell_styles.staticClasses.variantCheckbox}`]: {
      borderRight: "none"
    },
    [`& .${TableCell_styles.staticClasses.variantActions}`]: {
      borderLeft: "none"
    },
    [`& .${BulkActions_styles.staticClasses.root}`]: {
      marginBottom: 0,
      border: "none",
      borderBottom: `1px solid ${uikitStyles.theme.colors.atmo3}`,
      padding: uikitStyles.theme.spacing("xs", "sm")
    },
    [`& .${Pagination_styles.staticClasses.root}`]: {
      margin: 0,
      backgroundColor: uikitStyles.theme.colors.atmo2,
      padding: uikitStyles.theme.space.xs,
      borderTop: `1px solid ${uikitStyles.theme.colors.atmo3}`
    },
    [`& .${Pagination_styles.staticClasses.pageSizeOptions}`]: {
      left: uikitStyles.theme.space.sm
    },
    [`& .${Pagination_styles.staticClasses.pageSizeHeader}`]: {
      border: "none",
      "&:hover": {
        border: "none"
      }
    }
  },
  hidden: {},
  raisedHeader: {
    "+ div": {
      paddingTop: 0
    }
  },
  spaceTop: { paddingTop: 0 }
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
