{"version":3,"file":"TableContainer.cjs","sources":["../../../../src/Table/TableContainer/TableContainer.tsx"],"sourcesContent":["import { forwardRef } from \"react\";\n\nimport { HvBaseProps } from \"../../types/generic\";\nimport { ExtractNames } from \"../../utils/classes\";\n\nimport { staticClasses, useClasses } from \"./TableContainer.styles\";\n\nexport { staticClasses as tableContainerClasses };\n\nexport type HvTableContainerClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvTableContainerProps\n  extends HvBaseProps<HTMLDivElement, \"children\"> {\n  /**\n   * Content to be rendered\n   */\n  children: React.ReactNode;\n  /**\n   * The component used for the root node. Either a string to use a HTML element or a component.\n   * Defaults to tbody.\n   */\n  component?: React.ElementType;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvTableContainerClasses;\n}\n\n/**\n * HvTableContainer is a container for the HvTable\n */\nexport const HvTableContainer = forwardRef<HTMLElement, HvTableContainerProps>(\n  ({ classes: classesProp, className, component, ...others }, externalRef) => {\n    const { classes, cx } = useClasses(classesProp);\n\n    const Component = component || \"div\";\n\n    return (\n      <Component\n        ref={externalRef}\n        className={cx(classes.root, className)}\n        {...others}\n      />\n    );\n  }\n);\n"],"names":["forwardRef","useClasses","jsx"],"mappings":";;;;;AA6BO,MAAM,mBAAmBA,MAAA;AAAA,EAC9B,CAAC,EAAE,SAAS,aAAa,WAAW,WAAW,GAAG,OAAO,GAAG,gBAAgB;AAC1E,UAAM,EAAE,SAAS,GAAG,IAAIC,iCAAW,WAAW;AAE9C,UAAM,YAAY,aAAa;AAG7B,WAAAC,2BAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,KAAK;AAAA,QACL,WAAW,GAAG,QAAQ,MAAM,SAAS;AAAA,QACpC,GAAG;AAAA,MAAA;AAAA,IAAA;AAAA,EAGV;AACF;;;"}