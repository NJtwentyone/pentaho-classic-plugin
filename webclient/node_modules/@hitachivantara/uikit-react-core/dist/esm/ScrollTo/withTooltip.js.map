{"version":3,"file":"withTooltip.js","sources":["../../../src/ScrollTo/withTooltip.tsx"],"sourcesContent":["import { HvTypography, HvTypographyProps } from \"../Typography\";\nimport { withTooltip as withTooltipUtil } from \"../hocs/withTooltip\";\n\nimport { HvScrollToTooltipPositions } from \"./types\";\n\nconst hideTooltip = (event: React.MouseEvent<HTMLDivElement>) => {\n  const isOverFlow =\n    (event.target as HTMLDivElement).children.length > 1\n      ? Array.from(event.currentTarget.children).some(\n          (child) => child.scrollWidth > child.clientWidth\n        )\n      : (event.target as HTMLDivElement).scrollWidth >\n        (event.target as HTMLDivElement).clientWidth;\n  return !isOverFlow;\n};\n\nexport const withTooltip = (\n  label: string,\n  componentType: React.ElementType,\n  tooltipPosition: HvScrollToTooltipPositions = \"top\",\n  hideOnOverflow: boolean = true\n) => {\n  const component = (props: HvTypographyProps) => (\n    <HvTypography component={componentType} {...props}>\n      {props.children}\n    </HvTypography>\n  );\n\n  const hideTooltipFunc = hideOnOverflow ? hideTooltip : undefined;\n\n  return withTooltipUtil(component, label, tooltipPosition, hideTooltipFunc);\n};\n"],"names":["withTooltipUtil"],"mappings":";;;AAKA,MAAM,cAAc,CAAC,UAA4C;AACzD,QAAA,aACH,MAAM,OAA0B,SAAS,SAAS,IAC/C,MAAM,KAAK,MAAM,cAAc,QAAQ,EAAE;AAAA,IACvC,CAAC,UAAU,MAAM,cAAc,MAAM;AAAA,EAAA,IAEtC,MAAM,OAA0B,cAChC,MAAM,OAA0B;AACvC,SAAO,CAAC;AACV;AAEO,MAAM,cAAc,CACzB,OACA,eACA,kBAA8C,OAC9C,iBAA0B,SACvB;AACG,QAAA,YAAY,CAAC,UAChB,oBAAA,cAAA,EAAa,WAAW,eAAgB,GAAG,OACzC,UAAA,MAAM,SACT,CAAA;AAGI,QAAA,kBAAkB,iBAAiB,cAAc;AAEvD,SAAOA,cAAgB,WAAW,OAAO,iBAAiB,eAAe;AAC3E;"}