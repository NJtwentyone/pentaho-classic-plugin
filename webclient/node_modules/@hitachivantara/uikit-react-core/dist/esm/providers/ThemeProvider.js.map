{"version":3,"file":"ThemeProvider.js","sources":["../../../src/providers/ThemeProvider.tsx"],"sourcesContent":["import { useCallback, useEffect, useMemo, useState } from \"react\";\n\nimport { parseTheme, HvThemeStructure } from \"@hitachivantara/uikit-styles\";\nimport {\n  HvThemeContext,\n  defaultCacheKey,\n  defaultEmotionCache,\n  EmotionContext,\n} from \"@hitachivantara/uikit-react-shared\";\nimport type { HvThemeContextValue } from \"@hitachivantara/uikit-react-shared\";\n\nimport {\n  createTheme,\n  ThemeProvider as MuiThemeProvider,\n} from \"@mui/material/styles\";\n\nimport { EmotionCache } from \"@emotion/cache\";\n\nimport { setElementAttrs } from \"../utils/theme\";\nimport { HvTheme } from \"../types/theme\";\n\nexport { HvThemeContext };\nexport type { HvThemeContextValue };\n\nexport { defaultCacheKey, defaultEmotionCache, EmotionContext };\n\ninterface HvThemeProviderProps {\n  children: React.ReactNode;\n  themes: (HvTheme | HvThemeStructure)[];\n  theme: string;\n  emotionCache: EmotionCache;\n  colorMode: string;\n  themeRootId?: string;\n}\n\nexport const HvThemeProvider = ({\n  children,\n  themes: themesList,\n  theme,\n  emotionCache,\n  colorMode,\n  themeRootId: rootId,\n}: HvThemeProviderProps) => {\n  const initTheme = parseTheme(themesList, theme, colorMode);\n\n  const [parsedTheme, setParsedTheme] = useState(initTheme);\n  const [activeTheme, setActiveTheme] = useState(parsedTheme.theme);\n  const [selectedTheme, setSelectedTheme] = useState(parsedTheme.selectedTheme);\n  const [selectedMode, setThemeMode] = useState(parsedTheme.selectedMode);\n  const [colorModes, setColorModes] = useState(parsedTheme.colorModes);\n  const [themes, setThemes] = useState(themesList.map((t) => t.name));\n\n  useEffect(() => {\n    const pTheme = parseTheme(themesList, theme, colorMode);\n    setThemes(themesList.map((t) => t.name));\n    setParsedTheme(pTheme);\n  }, [themesList, theme, colorMode]);\n\n  useEffect(() => {\n    setActiveTheme(parsedTheme.theme);\n    setSelectedTheme(parsedTheme.selectedTheme);\n    setThemeMode(parsedTheme.selectedMode);\n    setColorModes(parsedTheme.colorModes);\n\n    setElementAttrs(\n      parsedTheme.selectedTheme,\n      parsedTheme.selectedMode,\n      parsedTheme.colorScheme,\n      rootId\n    );\n  }, [parsedTheme, rootId]);\n\n  const changeTheme = useCallback(\n    (newTheme = selectedTheme, newMode = selectedMode) => {\n      const pTheme = parseTheme(themesList, newTheme, newMode);\n      setParsedTheme(pTheme);\n    },\n    [selectedMode, selectedTheme, themesList]\n  );\n\n  const value = useMemo<HvThemeContextValue>(\n    () => ({\n      themes,\n      colorModes,\n      activeTheme: activeTheme as HvTheme,\n      selectedTheme,\n      selectedMode,\n      changeTheme,\n      rootId,\n    }),\n    [\n      themes,\n      colorModes,\n      activeTheme,\n      selectedTheme,\n      selectedMode,\n      changeTheme,\n      rootId,\n    ]\n  );\n\n  const MuiTheme = createTheme({\n    breakpoints: {\n      values: {\n        ...activeTheme.breakpoints.values,\n      },\n    },\n  });\n\n  const emotionCacheValue = useMemo(\n    () => ({ cache: emotionCache }),\n    [emotionCache]\n  );\n\n  return (\n    <MuiThemeProvider theme={MuiTheme}>\n      <HvThemeContext.Provider value={value}>\n        <EmotionContext.Provider value={emotionCacheValue}>\n          {children}\n        </EmotionContext.Provider>\n      </HvThemeContext.Provider>\n    </MuiThemeProvider>\n  );\n};\n"],"names":["MuiThemeProvider"],"mappings":";;;;;;;AAmCO,MAAM,kBAAkB,CAAC;AAAA,EAC9B;AAAA,EACA,QAAQ;AAAA,EACR;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AACf,MAA4B;AAC1B,QAAM,YAAY,WAAW,YAAY,OAAO,SAAS;AAEzD,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,SAAS;AACxD,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,YAAY,KAAK;AAChE,QAAM,CAAC,eAAe,gBAAgB,IAAI,SAAS,YAAY,aAAa;AAC5E,QAAM,CAAC,cAAc,YAAY,IAAI,SAAS,YAAY,YAAY;AACtE,QAAM,CAAC,YAAY,aAAa,IAAI,SAAS,YAAY,UAAU;AAC7D,QAAA,CAAC,QAAQ,SAAS,IAAI,SAAS,WAAW,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AAElE,YAAU,MAAM;AACd,UAAM,SAAS,WAAW,YAAY,OAAO,SAAS;AACtD,cAAU,WAAW,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC;AACvC,mBAAe,MAAM;AAAA,EACpB,GAAA,CAAC,YAAY,OAAO,SAAS,CAAC;AAEjC,YAAU,MAAM;AACd,mBAAe,YAAY,KAAK;AAChC,qBAAiB,YAAY,aAAa;AAC1C,iBAAa,YAAY,YAAY;AACrC,kBAAc,YAAY,UAAU;AAEpC;AAAA,MACE,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ,YAAY;AAAA,MACZ;AAAA,IAAA;AAAA,EACF,GACC,CAAC,aAAa,MAAM,CAAC;AAExB,QAAM,cAAc;AAAA,IAClB,CAAC,WAAW,eAAe,UAAU,iBAAiB;AACpD,YAAM,SAAS,WAAW,YAAY,UAAU,OAAO;AACvD,qBAAe,MAAM;AAAA,IACvB;AAAA,IACA,CAAC,cAAc,eAAe,UAAU;AAAA,EAAA;AAG1C,QAAM,QAAQ;AAAA,IACZ,OAAO;AAAA,MACL;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAAA,IAEF;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EAAA;AAGF,QAAM,WAAW,YAAY;AAAA,IAC3B,aAAa;AAAA,MACX,QAAQ;AAAA,QACN,GAAG,YAAY,YAAY;AAAA,MAC7B;AAAA,IACF;AAAA,EAAA,CACD;AAED,QAAM,oBAAoB;AAAA,IACxB,OAAO,EAAE,OAAO;IAChB,CAAC,YAAY;AAAA,EAAA;AAGf,6BACGA,eAAiB,EAAA,OAAO,UACvB,UAAA,oBAAC,eAAe,UAAf,EAAwB,OACvB,UAAA,oBAAC,eAAe,UAAf,EAAwB,OAAO,mBAC7B,SACH,CAAA,GACF,EACF,CAAA;AAEJ;"}