"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const useDefaultProps = require("../hooks/useDefaultProps.cjs");
const useControlled = require("../hooks/useControlled.cjs");
const useUniqueId = require("../hooks/useUniqueId.cjs");
const setId = require("../utils/setId.cjs");
const Section_styles = require("./Section.styles.cjs");
const Button = require("../Button/Button.cjs");
const HvSection = React.forwardRef(
  (props, ref) => {
    const {
      id,
      classes: classesProp,
      className,
      title,
      expandable,
      expanded,
      defaultExpanded = true,
      actions,
      onToggle,
      expandButtonProps,
      raisedHeader,
      contentRef,
      children,
      ...others
    } = useDefaultProps.useDefaultProps("HvSection", props);
    const { classes, cx } = Section_styles.useClasses(classesProp);
    const [isOpen, setIsOpen] = useControlled.useControlled(
      expanded,
      Boolean(defaultExpanded)
    );
    const elementId = useUniqueId.useUniqueId(id, "hvSection");
    const contentId = setId.setId(elementId, "content");
    const showContent = expandable ? !!isOpen : true;
    return /* @__PURE__ */ jsxRuntime.jsxs(
      "div",
      {
        ref,
        id: elementId,
        className: cx(classes.root, className),
        ...others,
        children: [
          (title || actions || expandable) && /* @__PURE__ */ jsxRuntime.jsxs(
            "div",
            {
              className: cx(classes.header, {
                [classes.raisedHeader]: raisedHeader && isOpen
              }),
              children: [
                expandable && /* @__PURE__ */ jsxRuntime.jsx(
                  Button.HvButton,
                  {
                    icon: true,
                    onClick: (event) => {
                      setIsOpen((o) => !o);
                      onToggle?.(event, !isOpen);
                    },
                    "aria-expanded": isOpen,
                    "aria-controls": contentId,
                    "aria-label": isOpen ? "Collapse" : "Expand",
                    ...expandButtonProps,
                    children: isOpen ? /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Up, {}) : /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Down, {})
                  }
                ),
                title,
                /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.actions, children: actions })
              ]
            }
          ),
          /* @__PURE__ */ jsxRuntime.jsx(
            "div",
            {
              ref: contentRef,
              id: contentId,
              hidden: !isOpen,
              className: cx(classes.content, {
                [classes.hidden]: !showContent,
                [classes.spaceTop]: !(title || actions || expandable)
              }),
              children
            }
          )
        ]
      }
    );
  }
);
exports.sectionClasses = Section_styles.staticClasses;
exports.HvSection = HvSection;
