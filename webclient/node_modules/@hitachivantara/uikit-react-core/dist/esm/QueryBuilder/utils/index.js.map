{"version":3,"file":"index.js","sources":["../../../../src/QueryBuilder/utils/index.tsx"],"sourcesContent":["import { HvQueryBuilderQueryGroup, HvQueryBuilderQueryRule } from \"../types\";\n\nexport const isBigList = (values: unknown[]) =>\n  values != null && values?.length > 10;\n\nexport const emptyRule = () => ({\n  id: Math.random(),\n});\n\nexport const emptyGroup = (createEmptyRule = false) => ({\n  id: Math.random(),\n  combinator: \"and\",\n  rules: createEmptyRule ? [emptyRule()] : [],\n});\n\nexport const clearNodeIds = (\n  original: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule\n) => {\n  const rule = { ...original };\n\n  // @ts-ignore\n  delete rule.id;\n\n  if (\"rules\" in rule) {\n    rule.rules = rule.rules.map((r) => clearNodeIds(r));\n  }\n\n  return rule;\n};\n\nexport const findNodeById = (\n  id: React.Key,\n  node: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule\n) => {\n  if (node.id === id) {\n    return node;\n  }\n  if (\"rules\" in node) {\n    for (let i = 0; i < node.rules.length; ++i) {\n      const rule = node.rules[i];\n\n      const found = findNodeById(id, rule);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n\nexport const findParentById = (\n  id: React.Key,\n  node: HvQueryBuilderQueryGroup | HvQueryBuilderQueryRule,\n  parent?: HvQueryBuilderQueryGroup\n) => {\n  if (node.id === id) {\n    return parent ?? null;\n  }\n\n  if (\"rules\" in node) {\n    const group = node;\n\n    for (let i = 0; i < group.rules.length; ++i) {\n      const rule = group.rules[i];\n\n      const found = findParentById(id, rule, group);\n      if (found) {\n        return found;\n      }\n    }\n  }\n\n  return null;\n};\n"],"names":[],"mappings":"AAEO,MAAM,YAAY,CAAC,WACxB,UAAU,QAAQ,QAAQ,SAAS;AAE9B,MAAM,YAAY,OAAO;AAAA,EAC9B,IAAI,KAAK,OAAO;AAClB;AAEa,MAAA,aAAa,CAAC,kBAAkB,WAAW;AAAA,EACtD,IAAI,KAAK,OAAO;AAAA,EAChB,YAAY;AAAA,EACZ,OAAO,kBAAkB,CAAC,UAAU,CAAC,IAAI,CAAC;AAC5C;AAEa,MAAA,eAAe,CAC1B,aACG;AACG,QAAA,OAAO,EAAE,GAAG;AAGlB,SAAO,KAAK;AAEZ,MAAI,WAAW,MAAM;AACd,SAAA,QAAQ,KAAK,MAAM,IAAI,CAAC,MAAM,aAAa,CAAC,CAAC;AAAA,EACpD;AAEO,SAAA;AACT;AAEa,MAAA,eAAe,CAC1B,IACA,SACG;AACC,MAAA,KAAK,OAAO,IAAI;AACX,WAAA;AAAA,EACT;AACA,MAAI,WAAW,MAAM;AACnB,aAAS,IAAI,GAAG,IAAI,KAAK,MAAM,QAAQ,EAAE,GAAG;AACpC,YAAA,OAAO,KAAK,MAAM,CAAC;AAEnB,YAAA,QAAQ,aAAa,IAAI,IAAI;AACnC,UAAI,OAAO;AACF,eAAA;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEO,SAAA;AACT;AAEO,MAAM,iBAAiB,CAC5B,IACA,MACA,WACG;AACC,MAAA,KAAK,OAAO,IAAI;AAClB,WAAO,UAAU;AAAA,EACnB;AAEA,MAAI,WAAW,MAAM;AACnB,UAAM,QAAQ;AAEd,aAAS,IAAI,GAAG,IAAI,MAAM,MAAM,QAAQ,EAAE,GAAG;AACrC,YAAA,OAAO,MAAM,MAAM,CAAC;AAE1B,YAAM,QAAQ,eAAe,IAAI,MAAM,KAAK;AAC5C,UAAI,OAAO;AACF,eAAA;AAAA,MACT;AAAA,IACF;AAAA,EACF;AAEO,SAAA;AACT;"}