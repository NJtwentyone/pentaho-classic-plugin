{"version":3,"file":"Actions.js","sources":["../../../../src/VerticalNavigation/Actions/Actions.tsx"],"sourcesContent":["import { useContext } from \"react\";\n\nimport { ExtractNames } from \"../../utils/classes\";\n\nimport { VerticalNavigationContext } from \"../VerticalNavigationContext\";\nimport { staticClasses, useClasses } from \"./Actions.styles\";\n\nexport { staticClasses as actionsClasses };\n\nexport type HvVerticalNavigationActionsClasses = ExtractNames<\n  typeof useClasses\n>;\n\nexport interface HvVerticalNavigationActionsProps {\n  /**\n   * Class names to be applied.\n   */\n  className?: string;\n  /**\n   * A Jss Object used to override or extend the styles applied to the component.\n   */\n  classes?: HvVerticalNavigationActionsClasses;\n  /**\n   * Id to be applied to the actions container.\n   */\n  id?: string;\n  /**\n   * Node to be rendered\n   */\n  children?: React.ReactNode;\n}\n\nexport const HvVerticalNavigationActions = ({\n  className,\n  classes: classesProp,\n  id,\n  children,\n  ...others\n}: HvVerticalNavigationActionsProps) => {\n  const { classes, cx } = useClasses(classesProp);\n\n  const { isOpen, useIcons } = useContext(VerticalNavigationContext);\n\n  return (\n    <div\n      id={id}\n      className={cx(\n        classes.root,\n        {\n          [classes.hide]: !isOpen && !useIcons,\n        },\n        className\n      )}\n      {...others}\n    >\n      {children}\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;;AAgCO,MAAM,8BAA8B,CAAC;AAAA,EAC1C;AAAA,EACA,SAAS;AAAA,EACT;AAAA,EACA;AAAA,EACA,GAAG;AACL,MAAwC;AACtC,QAAM,EAAE,SAAS,GAAG,IAAI,WAAW,WAAW;AAE9C,QAAM,EAAE,QAAQ,SAAS,IAAI,WAAW,yBAAyB;AAG/D,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,WAAW;AAAA,QACT,QAAQ;AAAA,QACR;AAAA,UACE,CAAC,QAAQ,IAAI,GAAG,CAAC,UAAU,CAAC;AAAA,QAC9B;AAAA,QACA;AAAA,MACF;AAAA,MACC,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EAAA;AAGP;"}