"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const React = require("react");
const capitalize = require("lodash/capitalize");
const useDefaultProps = require("../../hooks/useDefaultProps.cjs");
const TableContext = require("../TableContext.cjs");
const TableSectionContext = require("../TableSectionContext.cjs");
const TableCell_styles = require("./TableCell.styles.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const capitalize__default = /* @__PURE__ */ _interopDefault(capitalize);
const defaultComponent = "td";
const HvTableCell = React.forwardRef(
  (props, externalRef) => {
    const {
      children,
      component,
      className,
      style,
      classes: classesProp,
      align = "inherit",
      variant = "default",
      type: typeProp,
      stickyColumn = false,
      stickyColumnMostLeft = false,
      stickyColumnLeastRight = false,
      groupColumnMostLeft = false,
      groupColumnMostRight = false,
      sorted = false,
      resizable = false,
      resizing = false,
      ...others
    } = useDefaultProps.useDefaultProps("HvTableCell", props);
    const { classes, cx } = TableCell_styles.useClasses(classesProp);
    const tableContext = React.useContext(TableContext.default);
    const tableSectionContext = React.useContext(TableSectionContext.default);
    const type = typeProp || tableSectionContext?.type || "body";
    const Component = component || tableContext?.components?.Td || defaultComponent;
    return /* @__PURE__ */ jsxRuntime.jsx(
      Component,
      {
        ref: externalRef,
        role: Component === defaultComponent ? null : "cell",
        style,
        className: cx(
          classes.root,
          classes[type],
          {
            [classes[`align${capitalize__default.default(align)}`]]: align !== "inherit",
            [classes.variantList]: tableContext.variant === "listrow",
            [classes.variantListHead]: tableContext.variant === "listrow" && type !== "body",
            [classes[`variant${capitalize__default.default(variant)}`]]: variant !== "default",
            [classes.sorted]: sorted,
            [classes.stickyColumn]: stickyColumn,
            [classes.stickyColumnMostLeft]: stickyColumnMostLeft,
            [classes.stickyColumnLeastRight]: stickyColumnLeastRight,
            [classes.groupColumnMostLeft]: groupColumnMostLeft,
            [classes.groupColumnMostRight]: groupColumnMostRight,
            [classes.resizable]: resizable,
            [classes.resizing]: resizing
          },
          className
        ),
        ...others,
        children
      }
    );
  }
);
exports.tableCellClasses = TableCell_styles.staticClasses;
exports.HvTableCell = HvTableCell;
