{"version":3,"file":"useCss.cjs","sources":["../../../src/hooks/useCss.ts"],"sourcesContent":["import { useMemo } from \"react\";\nimport clsx from \"clsx\";\nimport { css as emotionCss, EmotionCache } from \"@emotion/css\";\nimport { serializeStyles, RegisteredCache } from \"@emotion/serialize\";\nimport { insertStyles, getRegisteredStyles } from \"@emotion/utils\";\n\nimport { useEmotionCache } from \"./useEmotionCache\";\n\ntype CSS = typeof emotionCss;\n\nfunction getRef(args: any[]) {\n  if (args.length !== 1) {\n    return { args, ref: undefined };\n  }\n\n  const [arg] = args;\n\n  if (!(arg instanceof Object)) {\n    return { args, ref: undefined };\n  }\n\n  if (!(\"ref\" in arg)) {\n    return { args, ref: undefined };\n  }\n\n  const { ref, ...argCopy } = arg;\n  return { args: [argCopy], ref };\n}\n\nconst cssFactory = (() => {\n  function merge(registered: RegisteredCache, css: CSS, className: string) {\n    const registeredStyles: string[] = [];\n\n    const rawClassName = getRegisteredStyles(\n      registered,\n      registeredStyles,\n      className\n    );\n\n    if (registeredStyles.length < 2) {\n      return className;\n    }\n\n    return rawClassName + css(registeredStyles);\n  }\n\n  function innerCssFactory(cache: EmotionCache) {\n    const css: CSS = (...styles: any) => {\n      const { ref, args } = getRef(styles);\n      const serialized = serializeStyles(args, cache.registered);\n      insertStyles(cache, serialized, false);\n      return `${cache.key}-${serialized.name}${\n        ref === undefined ? \"\" : ` ${ref}`\n      }`;\n    };\n\n    const cx = (...args: any) => merge(cache.registered, css, clsx(args));\n\n    return { css, cx };\n  }\n\n  return innerCssFactory;\n})();\n\nexport function useCss() {\n  const cache = useEmotionCache();\n  return useMemo(() => cssFactory(cache), [cache]);\n}\n"],"names":["getRegisteredStyles","serializeStyles","insertStyles","clsx","useEmotionCache","useMemo"],"mappings":";;;;;;;;;AAUA,SAAS,OAAO,MAAa;AACvB,MAAA,KAAK,WAAW,GAAG;AACd,WAAA,EAAE,MAAM,KAAK,OAAU;AAAA,EAChC;AAEM,QAAA,CAAC,GAAG,IAAI;AAEV,MAAA,EAAE,eAAe,SAAS;AACrB,WAAA,EAAE,MAAM,KAAK,OAAU;AAAA,EAChC;AAEI,MAAA,EAAE,SAAS,MAAM;AACZ,WAAA,EAAE,MAAM,KAAK,OAAU;AAAA,EAChC;AAEA,QAAM,EAAE,KAAK,GAAG,QAAA,IAAY;AAC5B,SAAO,EAAE,MAAM,CAAC,OAAO,GAAG,IAAI;AAChC;AAEA,MAAM,aAAoB,uBAAA;AACf,WAAA,MAAM,YAA6B,KAAU,WAAmB;AACvE,UAAM,mBAA6B,CAAA;AAEnC,UAAM,eAAeA,MAAA;AAAA,MACnB;AAAA,MACA;AAAA,MACA;AAAA,IAAA;AAGE,QAAA,iBAAiB,SAAS,GAAG;AACxB,aAAA;AAAA,IACT;AAEO,WAAA,eAAe,IAAI,gBAAgB;AAAA,EAC5C;AAEA,WAAS,gBAAgB,OAAqB;AACtC,UAAA,MAAW,IAAI,WAAgB;AACnC,YAAM,EAAE,KAAK,KAAK,IAAI,OAAO,MAAM;AACnC,YAAM,aAAaC,UAAA,gBAAgB,MAAM,MAAM,UAAU;AAC5CC,YAAAA,aAAA,OAAO,YAAY,KAAK;AACrC,aAAO,GAAG,MAAM,GAAG,IAAI,WAAW,IAAI,GACpC,QAAQ,SAAY,KAAK,IAAI,GAAG,EAClC;AAAA,IAAA;AAGI,UAAA,KAAK,IAAI,SAAc,MAAM,MAAM,YAAY,KAAKC,cAAAA,QAAK,IAAI,CAAC;AAE7D,WAAA,EAAE,KAAK;EAChB;AAEO,SAAA;AACT;AAEO,SAAS,SAAS;AACvB,QAAM,QAAQC,gBAAAA;AACd,SAAOC,MAAAA,QAAQ,MAAM,WAAW,KAAK,GAAG,CAAC,KAAK,CAAC;AACjD;;"}