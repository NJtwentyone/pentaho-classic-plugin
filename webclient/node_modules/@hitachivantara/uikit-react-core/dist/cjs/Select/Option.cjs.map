{"version":3,"file":"Option.cjs","sources":["../../../src/Select/Option.tsx"],"sourcesContent":["import { useRef } from \"react\";\nimport { useOption } from \"@mui/base/useOption\";\nimport { OptionOwnProps } from \"@mui/base/Option\";\nimport { useForkRef } from \"@mui/material/utils\";\n\nimport { HvListItem, HvListItemProps } from \"../ListContainer\";\nimport { useDefaultProps } from \"../hooks/useDefaultProps\";\nimport { fixedForwardRef } from \"../types/generic\";\nimport { ExtractNames, createClasses } from \"../utils/classes\";\nimport { outlineStyles } from \"../utils/focusUtils\";\n\nconst { staticClasses, useClasses } = createClasses(\"HvOption\", {\n  root: {},\n  highlighted: {\n    ...outlineStyles,\n  },\n});\n\nexport { staticClasses as optionClasses };\n\nexport type HvOptionClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvOptionProps<OptionValue extends {}>\n  extends Omit<HvListItemProps, \"value\" | \"disabled\">,\n    Pick<OptionOwnProps<OptionValue>, \"disabled\" | \"label\" | \"value\"> {\n  classes?: HvOptionClasses;\n}\n\nexport const HvOption = fixedForwardRef(function HvOption<\n  OptionValue extends {}\n>(props: HvOptionProps<OptionValue>, ref: React.Ref<HTMLLIElement>) {\n  const {\n    classes: classesProp,\n    className,\n    disabled = false,\n    label,\n    value,\n    children,\n    ...others\n  } = useDefaultProps(\"HvOption\", props);\n  const { classes, cx } = useClasses(classesProp);\n\n  const optionRef = useRef<HTMLElement>(null);\n  const rootRef = useForkRef(optionRef, ref);\n\n  const computedLabel =\n    label ??\n    (typeof children === \"string\"\n      ? children\n      : optionRef.current?.textContent?.trim());\n\n  const { getRootProps, selected, highlighted } = useOption({\n    disabled,\n    label: computedLabel,\n    rootRef,\n    value,\n  });\n\n  return (\n    <HvListItem\n      ref={ref}\n      selected={selected}\n      className={cx(classes.root, className, {\n        [classes.highlighted]: highlighted,\n      })}\n      {...getRootProps()}\n      {...others}\n    >\n      {children}\n    </HvListItem>\n  );\n});\n"],"names":["createClasses","outlineStyles","fixedForwardRef","HvOption","useDefaultProps","classes","useRef","useForkRef","useOption","jsx","HvListItem"],"mappings":";;;;;;;;;;;AAWA,MAAM,EAAE,eAAe,eAAeA,QAAAA,cAAc,YAAY;AAAA,EAC9D,MAAM,CAAC;AAAA,EACP,aAAa;AAAA,IACX,GAAGC,WAAA;AAAA,EACL;AACF,CAAC;AAYM,MAAM,WAAWC,QAAAA,gBAAgB,SAASC,UAE/C,OAAmC,KAA+B;AAC5D,QAAA;AAAA,IACJ,SAAS;AAAA,IACT;AAAA,IACA,WAAW;AAAA,IACX;AAAA,IACA;AAAA,IACA;AAAA,IACA,GAAG;AAAA,EAAA,IACDC,gBAAgB,gBAAA,YAAY,KAAK;AACrC,QAAM,EAAE,SAAAC,UAAS,GAAG,IAAI,WAAW,WAAW;AAExC,QAAA,YAAYC,aAAoB,IAAI;AACpC,QAAA,UAAUC,MAAAA,WAAW,WAAW,GAAG;AAEnC,QAAA,gBACJ,UACC,OAAO,aAAa,WACjB,WACA,UAAU,SAAS,aAAa,KAAK;AAE3C,QAAM,EAAE,cAAc,UAAU,YAAA,IAAgBC,UAAAA,UAAU;AAAA,IACxD;AAAA,IACA,OAAO;AAAA,IACP;AAAA,IACA;AAAA,EAAA,CACD;AAGC,SAAAC,2BAAA;AAAA,IAACC,SAAA;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA,WAAW,GAAGL,SAAQ,MAAM,WAAW;AAAA,QACrC,CAACA,SAAQ,WAAW,GAAG;AAAA,MAAA,CACxB;AAAA,MACA,GAAG,aAAa;AAAA,MAChB,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EAAA;AAGP,CAAC;;;"}