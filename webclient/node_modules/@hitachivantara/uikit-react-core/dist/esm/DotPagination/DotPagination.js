import { jsx } from "@emotion/react/jsx-runtime";
import { cloneElement } from "react";
import { OtherStep, CurrentStep } from "@hitachivantara/uikit-react-icons";
import { useDefaultProps } from "../hooks/useDefaultProps.js";
import { useClasses } from "./DotPagination.styles.js";
import { staticClasses } from "./DotPagination.styles.js";
import { HvRadioGroup } from "../RadioGroup/RadioGroup.js";
import { HvRadio } from "../Radio/Radio.js";
const getSelectorIcons = (radioIcon, radioCheckedIcon, classes) => {
  return {
    radio: cloneElement(radioIcon || /* @__PURE__ */ jsx(OtherStep, { width: 8, height: 8 }), {
      className: classes?.icon
    }),
    radioChecked: cloneElement(
      radioCheckedIcon || /* @__PURE__ */ jsx(CurrentStep, { width: 8, height: 8 }),
      {
        className: classes?.icon
      }
    )
  };
};
const range = (n) => Array.from(Array(n), (_, i) => i);
const HvDotPagination = (props) => {
  const {
    className,
    classes: classesProp,
    unselectedIcon,
    selectedIcon,
    pages = 1,
    page = 0,
    onPageChange,
    getItemAriaLabel,
    ...others
  } = useDefaultProps("HvDotPagination", props);
  const { classes, cx } = useClasses(classesProp);
  const icons = getSelectorIcons(unselectedIcon, selectedIcon, classes);
  return /* @__PURE__ */ jsx(
    HvRadioGroup,
    {
      className: cx(classes.root, className),
      classes: {
        horizontal: classes.horizontal
      },
      orientation: "horizontal",
      ...others,
      children: range(pages).map((i) => /* @__PURE__ */ jsx(
        HvRadio,
        {
          classes: {
            radio: classes.radio,
            root: classes.radioRoot
          },
          value: i,
          checked: page === i,
          onChange: (event) => onPageChange?.(event, i),
          icon: icons.radio,
          checkedIcon: icons.radioChecked,
          "aria-label": getItemAriaLabel?.(i)
        },
        i
      ))
    }
  );
};
export {
  HvDotPagination,
  staticClasses as dotPaginationClasses
};
