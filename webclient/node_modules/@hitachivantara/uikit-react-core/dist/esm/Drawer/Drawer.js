import { jsxs, jsx } from "@emotion/react/jsx-runtime";
import MuiDrawer from "@mui/material/Drawer";
import { Close } from "@hitachivantara/uikit-react-icons";
import { useDefaultProps } from "../hooks/useDefaultProps.js";
import { setId } from "../utils/setId.js";
import { useClasses } from "./Drawer.styles.js";
import { staticClasses } from "./Drawer.styles.js";
import { IconButton } from "../utils/IconButton/IconButton.js";
const HvDrawer = (props) => {
  const {
    className,
    classes: classesProp,
    id,
    children,
    open,
    onClose,
    anchor = "right",
    buttonTitle = "Close",
    showBackdrop = true,
    hideBackdrop,
    disableBackdropClick = false,
    ...others
  } = useDefaultProps("HvDrawer", props);
  const { classes, cx } = useClasses(classesProp);
  const handleOnClose = (event, reason) => {
    if (reason === "backdropClick" && disableBackdropClick)
      return;
    onClose?.(event, reason);
  };
  const shouldHideBackdrop = hideBackdrop ?? !showBackdrop;
  return /* @__PURE__ */ jsxs(
    MuiDrawer,
    {
      className: cx(classes.root, className),
      id,
      anchor,
      open,
      classes: {
        paper: classes.paper
      },
      hideBackdrop: shouldHideBackdrop,
      ...!shouldHideBackdrop && {
        slotProps: {
          backdrop: {
            classes: {
              root: classes.background
            },
            onClick: (event) => {
              if (disableBackdropClick)
                return;
              onClose?.(event, "backdropClick");
            }
          }
        }
      },
      onClose: handleOnClose,
      ...others,
      children: [
        /* @__PURE__ */ jsx(
          IconButton,
          {
            id: setId(id, "close"),
            className: classes.closeButton,
            variant: "secondaryGhost",
            onClick: onClose,
            title: buttonTitle,
            children: /* @__PURE__ */ jsx(Close, { role: "none" })
          }
        ),
        children
      ]
    }
  );
};
export {
  HvDrawer,
  staticClasses as drawerClasses
};
