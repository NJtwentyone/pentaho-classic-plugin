{"version":3,"file":"DropdownColumnCell.js","sources":["../../../../../src/Table/renderers/DropdownColumnCell/DropdownColumnCell.tsx"],"sourcesContent":["import { HvDropdownProps, HvDropdown } from \"../../../Dropdown\";\nimport { HvListValue } from \"../../../List\";\n\nexport interface HvDropdownColumnCellProp {\n  /** Values to render in the dropdown. */\n  values?: HvListValue[];\n  /** Placeholder text for when the dropdown is empty. */\n  placeholder?: string;\n  /** Whether the dropdown is disabled. */\n  disabled?: boolean;\n  /** Function called when there is change on the dropdown. */\n  onChange?: (value: HvListValue) => void;\n  /** Extra props to be passed onto the dropdown. */\n  dropdownProps?: HvDropdownProps;\n}\n\nexport const HvDropdownColumnCell = ({\n  values,\n  disabled,\n  onChange,\n  placeholder,\n  dropdownProps,\n}: HvDropdownColumnCellProp): JSX.Element => {\n  return (\n    <HvDropdown\n      onChange={(item) => {\n        onChange?.(item as HvListValue);\n      }}\n      placeholder={placeholder}\n      disabled={disabled}\n      values={values}\n      {...dropdownProps}\n    />\n  );\n};\n"],"names":[],"mappings":";;AAgBO,MAAM,uBAAuB,CAAC;AAAA,EACnC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAA6C;AAEzC,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,UAAU,CAAC,SAAS;AAClB,mBAAW,IAAmB;AAAA,MAChC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACC,GAAG;AAAA,IAAA;AAAA,EAAA;AAGV;"}