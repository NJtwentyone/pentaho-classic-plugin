{"version":3,"file":"FormUtils.js","sources":["../../../../../src/Forms/FormElement/utils/FormUtils.ts"],"sourcesContent":["import React from \"react\";\n\ninterface Descriptor {\n  id?: string;\n  htmlFor?: string;\n}\n/**\n * Scans the element's children looking for the children IDs that match the different form element types.\n * This function will produce an object that has a key for each provided name\n * Inside each key there will be an array with each id of the found descriptor.\n *\n * @param {Array} children - The children inside the form element to scan.\n * @param {Object} descriptors - Initial descriptors map (used for recursion).\n *\n */\nconst findDescriptors = (\n  children,\n  descriptors: {\n    input: Descriptor[];\n    label: Descriptor[];\n    description: Descriptor[];\n    controlled: Descriptor[];\n    errormessage: Descriptor[];\n    HvCalendarHeader?: Descriptor[];\n  } = {\n    input: [],\n    label: [],\n    description: [],\n    controlled: [],\n    errormessage: [],\n\n    // TODO: refactor this out\n    HvCalendarHeader: [],\n  }\n) => {\n  React.Children.forEach(children, (child) => {\n    if (child?.type?.formElementType && child.props?.id) {\n      descriptors[child.type.formElementType]?.push({\n        id: child.props?.id,\n        htmlFor: child.props?.htmlFor,\n      });\n    }\n\n    if (child?.type?.formElementType !== \"formelement\") {\n      findDescriptors(child?.props?.children, descriptors);\n    }\n  });\n\n  return descriptors;\n};\n\nconst getIdReferenceListFor = (\n  formElementType,\n  descriptors,\n  filterFor = null\n) => {\n  const referenceList = descriptors?.[formElementType]\n    ?.filter((d) => d.htmlFor !== filterFor)\n    ?.map((d) => d.id)\n    .join(\" \")\n    .trim();\n\n  return referenceList !== \"\" ? referenceList : undefined;\n};\n\nconst getIdReferenceFor = (formElementType, descriptors, filterFor = null) => {\n  const referenceList = descriptors?.[formElementType]\n    ?.filter((d) => d.htmlFor !== filterFor)\n    ?.map((d) => d.id)?.[0];\n\n  return referenceList !== \"\" ? referenceList : undefined;\n};\n\nconst buildFormElementPropsFromContext = (\n  name,\n  disabled,\n  readOnly,\n  required,\n  context\n) => {\n  return {\n    name: name || context?.elementName,\n    disabled: disabled !== undefined ? disabled : context?.elementDisabled,\n    readOnly: readOnly !== undefined ? readOnly : context?.elementReadOnly,\n    required: required !== undefined ? required : context?.elementRequired,\n    status: context?.elementStatus,\n  };\n};\n\nconst buildAriaPropsFromContext = (props, context, isInvalid, inputId) => {\n  const arias: React.AriaAttributes = {\n    \"aria-labelledby\":\n      props?.[\"aria-labelledby\"] !== undefined\n        ? props?.[\"aria-labelledby\"]\n        : getIdReferenceListFor(\"label\", context?.descriptors, inputId),\n    \"aria-describedby\":\n      props?.[\"aria-describedby\"] !== undefined\n        ? props?.[\"aria-describedby\"]\n        : getIdReferenceListFor(\"description\", context?.descriptors),\n    \"aria-controls\":\n      props?.[\"aria-controls\"] !== undefined\n        ? props?.[\"aria-controls\"]\n        : getIdReferenceListFor(\"controlled\", context?.descriptors),\n  };\n\n  if (isInvalid) {\n    arias[\"aria-invalid\"] = isInvalid;\n    arias[\"aria-errormessage\"] =\n      props?.[\"aria-errormessage\"] !== undefined\n        ? props?.[\"aria-errormessage\"]\n        : getIdReferenceFor(\"errormessage\", context?.descriptors);\n  }\n\n  return arias;\n};\n\nexport {\n  findDescriptors,\n  getIdReferenceListFor,\n  getIdReferenceFor,\n  buildFormElementPropsFromContext,\n  buildAriaPropsFromContext,\n};\n"],"names":["React"],"mappings":";AAeM,MAAA,kBAAkB,CACtB,UACA,cAOI;AAAA,EACF,OAAO,CAAC;AAAA,EACR,OAAO,CAAC;AAAA,EACR,aAAa,CAAC;AAAA,EACd,YAAY,CAAC;AAAA,EACb,cAAc,CAAC;AAAA;AAAA,EAGf,kBAAkB,CAAC;AACrB,MACG;AACHA,iBAAM,SAAS,QAAQ,UAAU,CAAC,UAAU;AAC1C,QAAI,OAAO,MAAM,mBAAmB,MAAM,OAAO,IAAI;AACnD,kBAAY,MAAM,KAAK,eAAe,GAAG,KAAK;AAAA,QAC5C,IAAI,MAAM,OAAO;AAAA,QACjB,SAAS,MAAM,OAAO;AAAA,MAAA,CACvB;AAAA,IACH;AAEI,QAAA,OAAO,MAAM,oBAAoB,eAAe;AAClC,sBAAA,OAAO,OAAO,UAAU,WAAW;AAAA,IACrD;AAAA,EAAA,CACD;AAEM,SAAA;AACT;AAEA,MAAM,wBAAwB,CAC5B,iBACA,aACA,YAAY,SACT;AACG,QAAA,gBAAgB,cAAc,eAAe,GAC/C,OAAO,CAAC,MAAM,EAAE,YAAY,SAAS,GACrC,IAAI,CAAC,MAAM,EAAE,EAAE,EAChB,KAAK,GAAG,EACR;AAEI,SAAA,kBAAkB,KAAK,gBAAgB;AAChD;AAEA,MAAM,oBAAoB,CAAC,iBAAiB,aAAa,YAAY,SAAS;AAC5E,QAAM,gBAAgB,cAAc,eAAe,GAC/C,OAAO,CAAC,MAAM,EAAE,YAAY,SAAS,GACrC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC;AAEjB,SAAA,kBAAkB,KAAK,gBAAgB;AAChD;AAEA,MAAM,mCAAmC,CACvC,MACA,UACA,UACA,UACA,YACG;AACI,SAAA;AAAA,IACL,MAAM,QAAQ,SAAS;AAAA,IACvB,UAAU,aAAa,SAAY,WAAW,SAAS;AAAA,IACvD,UAAU,aAAa,SAAY,WAAW,SAAS;AAAA,IACvD,UAAU,aAAa,SAAY,WAAW,SAAS;AAAA,IACvD,QAAQ,SAAS;AAAA,EAAA;AAErB;AAEA,MAAM,4BAA4B,CAAC,OAAO,SAAS,WAAW,YAAY;AACxE,QAAM,QAA8B;AAAA,IAClC,mBACE,QAAQ,iBAAiB,MAAM,SAC3B,QAAQ,iBAAiB,IACzB,sBAAsB,SAAS,SAAS,aAAa,OAAO;AAAA,IAClE,oBACE,QAAQ,kBAAkB,MAAM,SAC5B,QAAQ,kBAAkB,IAC1B,sBAAsB,eAAe,SAAS,WAAW;AAAA,IAC/D,iBACE,QAAQ,eAAe,MAAM,SACzB,QAAQ,eAAe,IACvB,sBAAsB,cAAc,SAAS,WAAW;AAAA,EAAA;AAGhE,MAAI,WAAW;AACb,UAAM,cAAc,IAAI;AACxB,UAAM,mBAAmB,IACvB,QAAQ,mBAAmB,MAAM,SAC7B,QAAQ,mBAAmB,IAC3B,kBAAkB,gBAAgB,SAAS,WAAW;AAAA,EAC9D;AAEO,SAAA;AACT;"}