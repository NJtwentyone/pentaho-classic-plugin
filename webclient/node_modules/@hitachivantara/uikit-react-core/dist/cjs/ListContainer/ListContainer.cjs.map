{"version":3,"file":"ListContainer.cjs","sources":["../../../src/ListContainer/ListContainer.tsx"],"sourcesContent":["import React, {\n  useRef,\n  useContext,\n  useMemo,\n  forwardRef,\n  isValidElement,\n} from \"react\";\n\nimport { HvBaseProps } from \"../types/generic\";\nimport { useForkRef } from \"../hooks/useForkRef\";\nimport { useDefaultProps } from \"../hooks/useDefaultProps\";\nimport { ExtractNames } from \"../utils/classes\";\n\nimport { staticClasses, useClasses } from \"./ListContainer.styles\";\nimport HvListContext from \"./ListContext\";\n\nexport { staticClasses as listContainerClasses };\n\nexport type HvListContainerClasses = ExtractNames<typeof useClasses>;\n\nexport interface HvListContainerProps extends HvBaseProps<HTMLUListElement> {\n  /**\n   * If the list items should be focusable and react to mouse over events.\n   * Defaults to true if the list is selectable, false otherwise.\n   */\n  interactive?: boolean;\n  /** If `true` compact the vertical spacing between list items. */\n  condensed?: boolean;\n  /** If `true`, the list items are _visually_ selectable. To enable selection, use `HvSelectionList` */\n  selectable?: boolean;\n  /** If `true`, the list items' left and right padding is removed. */\n  disableGutters?: boolean;\n  /** A Jss Object used to override or extend the styles applied to the component. */\n  classes?: HvListContainerClasses;\n}\n\n/**\n * A <b>list</b> is any enumeration of a set of items.\n * The simple list is for continuous <b>vertical indexes of text or icons+text</b>. The content of these lists must be simple: ideally simples fields.\n * This pattern is ideal for <b>selections</b>. It should be used inside a HvPanel.\n */\nexport const HvListContainer = forwardRef<\n  HTMLUListElement,\n  HvListContainerProps\n>((props, ref) => {\n  const {\n    id,\n    classes: classesProp,\n    className,\n    interactive = false,\n    selectable,\n    condensed,\n    disableGutters,\n    children: childrenProp,\n    ...others\n  } = useDefaultProps(\"HvListContainer\", props);\n\n  const { classes, cx } = useClasses(classesProp);\n\n  const containerRef = useRef(null);\n\n  const { topContainerRef, nesting = -1 } = useContext(HvListContext);\n\n  const listContext = useMemo(\n    () => ({\n      topContainerRef: topContainerRef || containerRef,\n      condensed,\n      selectable,\n      disableGutters,\n      interactive,\n      nesting: nesting + 1,\n    }),\n    [\n      condensed,\n      selectable,\n      disableGutters,\n      interactive,\n      nesting,\n      topContainerRef,\n    ]\n  );\n\n  const children = useMemo(() => {\n    if (!interactive) return childrenProp;\n\n    const anySelected = React.Children.toArray(childrenProp).some(\n      (child) =>\n        isValidElement(child) && child.props.selected && !child.props.disabled\n    );\n\n    return React.Children.map(childrenProp, (child: any, i) => {\n      const tabIndex =\n        child.props.tabIndex ||\n        (!anySelected && i === 0) ||\n        (child.props.selected && !child.props.disabled)\n          ? 0\n          : -1;\n\n      return React.cloneElement(child, {\n        tabIndex,\n        interactive,\n      });\n    });\n  }, [childrenProp, interactive]);\n\n  const handleRef = useForkRef(ref, containerRef);\n\n  return (\n    <HvListContext.Provider value={listContext}>\n      <ul\n        ref={handleRef}\n        id={id}\n        className={cx(classes.root, className)}\n        {...others}\n      >\n        {children}\n      </ul>\n    </HvListContext.Provider>\n  );\n});\n"],"names":["forwardRef","useDefaultProps","useClasses","useRef","useContext","HvListContext","useMemo","React","isValidElement","useForkRef","jsx"],"mappings":";;;;;;;;;;AAyCO,MAAM,kBAAkBA,MAAA,WAG7B,CAAC,OAAO,QAAQ;AACV,QAAA;AAAA,IACJ;AAAA,IACA,SAAS;AAAA,IACT;AAAA,IACA,cAAc;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IACA,UAAU;AAAA,IACV,GAAG;AAAA,EAAA,IACDC,gBAAgB,gBAAA,mBAAmB,KAAK;AAE5C,QAAM,EAAE,SAAS,GAAG,IAAIC,gCAAW,WAAW;AAExC,QAAA,eAAeC,aAAO,IAAI;AAEhC,QAAM,EAAE,iBAAiB,UAAU,GAAG,IAAIC,MAAAA,WAAWC,YAAAA,OAAa;AAElE,QAAM,cAAcC,MAAA;AAAA,IAClB,OAAO;AAAA,MACL,iBAAiB,mBAAmB;AAAA,MACpC;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,SAAS,UAAU;AAAA,IAAA;AAAA,IAErB;AAAA,MACE;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IACF;AAAA,EAAA;AAGI,QAAA,WAAWA,MAAAA,QAAQ,MAAM;AAC7B,QAAI,CAAC;AAAoB,aAAA;AAEzB,UAAM,cAAcC,eAAAA,QAAM,SAAS,QAAQ,YAAY,EAAE;AAAA,MACvD,CAAC,UACCC,qBAAe,KAAK,KAAK,MAAM,MAAM,YAAY,CAAC,MAAM,MAAM;AAAA,IAAA;AAGlE,WAAOD,eAAAA,QAAM,SAAS,IAAI,cAAc,CAAC,OAAY,MAAM;AACzD,YAAM,WACJ,MAAM,MAAM,YACX,CAAC,eAAe,MAAM,KACtB,MAAM,MAAM,YAAY,CAAC,MAAM,MAAM,WAClC,IACA;AAEC,aAAAA,eAAA,QAAM,aAAa,OAAO;AAAA,QAC/B;AAAA,QACA;AAAA,MAAA,CACD;AAAA,IAAA,CACF;AAAA,EAAA,GACA,CAAC,cAAc,WAAW,CAAC;AAExB,QAAA,YAAYE,WAAAA,WAAW,KAAK,YAAY;AAE9C,SACGC,2BAAAA,IAAAL,YAAAA,QAAc,UAAd,EAAuB,OAAO,aAC7B,UAAAK,2BAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAK;AAAA,MACL;AAAA,MACA,WAAW,GAAG,QAAQ,MAAM,SAAS;AAAA,MACpC,GAAG;AAAA,MAEH;AAAA,IAAA;AAAA,EAEL,EAAA,CAAA;AAEJ,CAAC;;;"}