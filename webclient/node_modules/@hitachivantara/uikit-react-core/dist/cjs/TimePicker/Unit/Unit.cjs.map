{"version":3,"file":"Unit.cjs","sources":["../../../../src/TimePicker/Unit/Unit.tsx"],"sourcesContent":["import { KeyboardEvent } from \"react\";\n\nimport { DateFieldState, DateSegment } from \"@react-stately/datepicker\";\n\nimport {\n  DropDownXS as SubtractTimeIcon,\n  DropUpXS as AddTimeIcon,\n} from \"@hitachivantara/uikit-react-icons\";\nimport { theme } from \"@hitachivantara/uikit-styles\";\n\nimport { HvInput, HvInputProps } from \"../../Input\";\nimport { HvToggleButton } from \"../../ToggleButton\";\n\nimport { useClasses } from \"./Unit.styles\";\n\ninterface UnitProps {\n  id?: string;\n  state: DateFieldState;\n  segment: DateSegment;\n  placeholder?: string;\n  /** Called when the value changes */\n  onChange?: HvInputProps[\"onChange\"];\n  /** Called when the up/add arrow is pressed */\n  onAdd?: () => void;\n  /** Called when the down/subtract arrow is pressed */\n  onSub?: () => void;\n}\n\nexport const Unit = ({\n  id,\n  state,\n  segment,\n  placeholder: placeholderProp,\n  onChange,\n  onAdd,\n  onSub,\n}: UnitProps) => {\n  const { classes } = useClasses();\n  const { type, text } = segment;\n  const placeholder = placeholderProp ?? segment.placeholder;\n\n  return (\n    <div className={classes.root}>\n      {type !== \"literal\" && <AddTimeIcon onClick={onAdd} />}\n      {type === \"literal\" && <div className={classes.separator}>{text}</div>}\n      {type === \"dayPeriod\" && (\n        <HvToggleButton className={classes.periodToggle} onClick={onAdd}>\n          {text}\n        </HvToggleButton>\n      )}\n      {[\"hour\", \"minute\", \"second\"].includes(type) && (\n        <HvInput\n          id={id}\n          disableClear\n          style={{\n            ...theme.typography.title3,\n          }}\n          classes={{\n            input: classes.input,\n            root: classes.inputContainer,\n            inputBorderContainer: classes.inputBorderContainer,\n            inputRoot: classes.inputRoot,\n          }}\n          onKeyDown={(event) => {\n            if ((event as KeyboardEvent).key === \"Enter\") {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n          }}\n          required\n          status={state.validationState}\n          value={text.padStart(2, \"0\")}\n          onChange={onChange}\n          placeholder={placeholder}\n          inputProps={{ autoComplete: \"off\", type: \"number\" }}\n        />\n      )}\n      {type !== \"literal\" && <SubtractTimeIcon onClick={onSub} />}\n    </div>\n  );\n};\n"],"names":["useClasses","jsxs","jsx","AddTimeIcon","HvToggleButton","HvInput","theme","SubtractTimeIcon"],"mappings":";;;;;;;;AA4BO,MAAM,OAAO,CAAC;AAAA,EACnB;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAa;AAAA,EACb;AAAA,EACA;AAAA,EACA;AACF,MAAiB;AACT,QAAA,EAAE,YAAYA,YAAAA;AACd,QAAA,EAAE,MAAM,KAAS,IAAA;AACjB,QAAA,cAAc,mBAAmB,QAAQ;AAE/C,SACGC,2BAAAA,KAAA,OAAA,EAAI,WAAW,QAAQ,MACrB,UAAA;AAAA,IAAA,SAAS,aAAaC,2BAAA,IAACC,gBAAY,UAAA,EAAA,SAAS,OAAO;AAAA,IACnD,SAAS,aAAaD,2BAAA,IAAC,SAAI,WAAW,QAAQ,WAAY,UAAK,MAAA;AAAA,IAC/D,SAAS,eACPA,+BAAAE,aAAAA,gBAAA,EAAe,WAAW,QAAQ,cAAc,SAAS,OACvD,UACH,KAAA,CAAA;AAAA,IAED,CAAC,QAAQ,UAAU,QAAQ,EAAE,SAAS,IAAI,KACzCF,2BAAA;AAAA,MAACG,MAAA;AAAA,MAAA;AAAA,QACC;AAAA,QACA,cAAY;AAAA,QACZ,OAAO;AAAA,UACL,GAAGC,YAAAA,MAAM,WAAW;AAAA,QACtB;AAAA,QACA,SAAS;AAAA,UACP,OAAO,QAAQ;AAAA,UACf,MAAM,QAAQ;AAAA,UACd,sBAAsB,QAAQ;AAAA,UAC9B,WAAW,QAAQ;AAAA,QACrB;AAAA,QACA,WAAW,CAAC,UAAU;AACf,cAAA,MAAwB,QAAQ,SAAS;AAC5C,kBAAM,eAAe;AACrB,kBAAM,gBAAgB;AAAA,UACxB;AAAA,QACF;AAAA,QACA,UAAQ;AAAA,QACR,QAAQ,MAAM;AAAA,QACd,OAAO,KAAK,SAAS,GAAG,GAAG;AAAA,QAC3B;AAAA,QACA;AAAA,QACA,YAAY,EAAE,cAAc,OAAO,MAAM,SAAS;AAAA,MAAA;AAAA,IACpD;AAAA,IAED,SAAS,aAAcJ,2BAAA,IAAAK,gBAAA,YAAA,EAAiB,SAAS,OAAO;AAAA,EAC3D,EAAA,CAAA;AAEJ;;"}