{"version":3,"file":"utils.js","sources":["../../../src/Typography/utils.ts"],"sourcesContent":["export const typographyVariants = [\n  \"display\",\n  \"title1\",\n  \"title2\",\n  \"title3\",\n  \"title4\",\n  \"body\",\n  \"label\",\n  \"caption1\",\n  \"caption2\",\n] as const;\n\nexport type HvTypographyVariants = (typeof typographyVariants)[number];\n\n/** @deprecated */\nexport type HvTypographyLegacyVariants =\n  | \"5xlTitle\"\n  | \"4xlTitle\"\n  | \"3xlTitle\"\n  | \"xxlTitle\"\n  | \"xlTitle\"\n  | \"lTitle\"\n  | \"mTitle\"\n  | \"sTitle\"\n  | \"xsTitle\"\n  | \"xxsTitle\"\n  | \"sectionTitle\"\n  | \"highlightText\"\n  | \"normalText\"\n  | \"placeholderText\"\n  | \"link\"\n  | \"disabledText\"\n  | \"selectedNavText\"\n  | \"vizText\"\n  | \"vizTextDisabled\"\n  | \"xsInlineLink\";\n\ntype Variant = HvTypographyVariants | HvTypographyLegacyVariants;\n\nconst mappableVariants = new Map<Variant, HvTypographyVariants>([\n  [\"3xlTitle\", \"display\"],\n  [\"xlTitle\", \"title1\"],\n  [\"mTitle\", \"title2\"],\n  [\"xsTitle\", \"title3\"],\n  [\"highlightText\", \"label\"],\n  [\"normalText\", \"body\"],\n  [\"vizText\", \"caption1\"],\n]);\n\nconst isLegacyVariant = (variant: string) => {\n  return [\n    \"5xlTitle\",\n    \"4xlTitle\",\n    \"3xlTitle\",\n    \"xxlTitle\",\n    \"xlTitle\",\n    \"lTitle\",\n    \"mTitle\",\n    \"sTitle\",\n    \"xsTitle\",\n    \"xxsTitle\",\n    \"sectionTitle\",\n    \"highlightText\",\n    \"normalText\",\n    \"placeholderText\",\n    \"link\",\n    \"disabledText\",\n    \"selectedNavText\",\n    \"vizText\",\n    \"vizTextDisabled\",\n    \"xsInlineLink\",\n  ].includes(variant);\n};\n\nexport const mapVariant = (variant: Variant, theme?: string) => {\n  if (theme === \"ds3\") return variant;\n  const mappedVariant = mappableVariants.get(variant);\n\n  if (import.meta.env.DEV) {\n    /* eslint-disable no-console */\n    const msg = `The typography variant ${variant} is deprecated.`;\n    if (mappedVariant) {\n      console.warn(`${msg} Use ${mappedVariant} instead.`);\n    }\n    if (isLegacyVariant(variant)) {\n      console.warn(msg);\n    }\n  }\n\n  return mappedVariant || variant;\n};\n"],"names":[],"mappings":"AAAO,MAAM,qBAAqB;AAAA,EAChC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF;AA6BA,MAAM,uCAAuB,IAAmC;AAAA,EAC9D,CAAC,YAAY,SAAS;AAAA,EACtB,CAAC,WAAW,QAAQ;AAAA,EACpB,CAAC,UAAU,QAAQ;AAAA,EACnB,CAAC,WAAW,QAAQ;AAAA,EACpB,CAAC,iBAAiB,OAAO;AAAA,EACzB,CAAC,cAAc,MAAM;AAAA,EACrB,CAAC,WAAW,UAAU;AACxB,CAAC;AA2BY,MAAA,aAAa,CAAC,SAAkB,UAAmB;AAC9D,MAAI,UAAU;AAAc,WAAA;AACtB,QAAA,gBAAgB,iBAAiB,IAAI,OAAO;AAalD,SAAO,iBAAiB;AAC1B;"}