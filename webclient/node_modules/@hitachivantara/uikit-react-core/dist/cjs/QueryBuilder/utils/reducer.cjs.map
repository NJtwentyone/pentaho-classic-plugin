{"version":3,"file":"reducer.cjs","sources":["../../../../src/QueryBuilder/utils/reducer.tsx"],"sourcesContent":["import { Reducer } from \"react\";\n\nimport { emptyRule, emptyGroup, findNodeById, findParentById } from \"./index\";\nimport { HvQueryBuilderQuery, QueryAction } from \"../types\";\n\nconst reducer: Reducer<HvQueryBuilderQuery, QueryAction> = (state, action) => {\n  const query = { ...state };\n\n  switch (action.type) {\n    case \"reset-query\": {\n      return emptyGroup();\n    }\n    case \"reset-group\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        group.rules = [emptyRule()];\n\n        return query;\n      }\n      break;\n    }\n    case \"add-rule\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        const rule = emptyRule();\n\n        group.rules.push(rule);\n\n        return query;\n      }\n      break;\n    }\n    case \"add-group\": {\n      const group = findNodeById(action.id, query);\n      if (group && \"rules\" in group) {\n        group.rules.push(emptyGroup(true));\n\n        return query;\n      }\n      break;\n    }\n    case \"remove-node\": {\n      const parent = findParentById(action.id, query);\n      if (parent) {\n        parent.rules = parent.rules.filter((rule) => rule.id !== action.id);\n\n        return query;\n      }\n\n      // reset query if deleting top node\n      return emptyGroup();\n    }\n    case \"set-combinator\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"combinator\" in node) {\n        if (node.combinator !== action.combinator) {\n          node.combinator = action.combinator;\n\n          return query;\n        }\n      }\n      break;\n    }\n    case \"set-attribute\": {\n      const node = findNodeById(action.id, query);\n      if (node && node.attribute !== action.attribute) {\n        node.attribute = action.attribute ?? undefined;\n\n        // we keep the operator and value unless the operator is explicitly null (or set)\n        if (action.operator !== undefined) {\n          node.operator = action.operator ?? undefined;\n          node.value = action.value ?? undefined;\n        }\n\n        return query;\n      }\n      break;\n    }\n    case \"set-operator\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"attribute\" in node) {\n        if (node.operator !== action.operator) {\n          node.operator = action.operator;\n          if (action.value !== undefined) {\n            node.value = action.value ?? undefined;\n          }\n\n          return query;\n        }\n      }\n      break;\n    }\n    case \"set-value\": {\n      const node = findNodeById(action.id, query);\n      if (node && \"operator\" in node) {\n        node.value = action.value ?? undefined;\n\n        return query;\n      }\n      break;\n    }\n\n    default:\n  }\n\n  // Return existing state if nothing changed\n  return query;\n};\n\nexport default reducer;\n"],"names":["emptyGroup","findNodeById","emptyRule","findParentById"],"mappings":";;;AAKA,MAAM,UAAqD,CAAC,OAAO,WAAW;AACtE,QAAA,QAAQ,EAAE,GAAG;AAEnB,UAAQ,OAAO,MAAM;AAAA,IACnB,KAAK,eAAe;AAClB,aAAOA,MAAW,WAAA;AAAA,IACpB;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,QAAQC,MAAA,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AACvB,cAAA,QAAQ,CAACC,MAAA,UAAA,CAAW;AAEnB,eAAA;AAAA,MACT;AACA;AAAA,IACF;AAAA,IACA,KAAK,YAAY;AACf,YAAM,QAAQD,MAAA,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AAC7B,cAAM,OAAOC,MAAAA;AAEP,cAAA,MAAM,KAAK,IAAI;AAEd,eAAA;AAAA,MACT;AACA;AAAA,IACF;AAAA,IACA,KAAK,aAAa;AAChB,YAAM,QAAQD,MAAA,aAAa,OAAO,IAAI,KAAK;AACvC,UAAA,SAAS,WAAW,OAAO;AAC7B,cAAM,MAAM,KAAKD,MAAAA,WAAW,IAAI,CAAC;AAE1B,eAAA;AAAA,MACT;AACA;AAAA,IACF;AAAA,IACA,KAAK,eAAe;AAClB,YAAM,SAASG,MAAA,eAAe,OAAO,IAAI,KAAK;AAC9C,UAAI,QAAQ;AACH,eAAA,QAAQ,OAAO,MAAM,OAAO,CAAC,SAAS,KAAK,OAAO,OAAO,EAAE;AAE3D,eAAA;AAAA,MACT;AAGA,aAAOH,MAAW,WAAA;AAAA,IACpB;AAAA,IACA,KAAK,kBAAkB;AACrB,YAAM,OAAOC,MAAA,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,gBAAgB,MAAM;AAC5B,YAAA,KAAK,eAAe,OAAO,YAAY;AACzC,eAAK,aAAa,OAAO;AAElB,iBAAA;AAAA,QACT;AAAA,MACF;AACA;AAAA,IACF;AAAA,IACA,KAAK,iBAAiB;AACpB,YAAM,OAAOA,MAAA,aAAa,OAAO,IAAI,KAAK;AAC1C,UAAI,QAAQ,KAAK,cAAc,OAAO,WAAW;AAC1C,aAAA,YAAY,OAAO,aAAa;AAGjC,YAAA,OAAO,aAAa,QAAW;AAC5B,eAAA,WAAW,OAAO,YAAY;AAC9B,eAAA,QAAQ,OAAO,SAAS;AAAA,QAC/B;AAEO,eAAA;AAAA,MACT;AACA;AAAA,IACF;AAAA,IACA,KAAK,gBAAgB;AACnB,YAAM,OAAOA,MAAA,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,eAAe,MAAM;AAC3B,YAAA,KAAK,aAAa,OAAO,UAAU;AACrC,eAAK,WAAW,OAAO;AACnB,cAAA,OAAO,UAAU,QAAW;AACzB,iBAAA,QAAQ,OAAO,SAAS;AAAA,UAC/B;AAEO,iBAAA;AAAA,QACT;AAAA,MACF;AACA;AAAA,IACF;AAAA,IACA,KAAK,aAAa;AAChB,YAAM,OAAOA,MAAA,aAAa,OAAO,IAAI,KAAK;AACtC,UAAA,QAAQ,cAAc,MAAM;AACzB,aAAA,QAAQ,OAAO,SAAS;AAEtB,eAAA;AAAA,MACT;AACA;AAAA,IACF;AAAA,EAGF;AAGO,SAAA;AACT;AAEA,MAAA,YAAe;;"}