"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const useTheme = require("../../../hooks/useTheme.cjs");
const useDefaultProps = require("../../../hooks/useDefaultProps.cjs");
const VerticalScrollListItem_styles = require("./VerticalScrollListItem.styles.cjs");
const Tooltip = require("../../../Tooltip/Tooltip.cjs");
const HvVerticalScrollListItem = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    selected,
    label,
    onClick,
    onKeyDown,
    tooltipPlacement = "left",
    href,
    ...others
  } = useDefaultProps.useDefaultProps("HvVerticalScrollListItem", props);
  const { classes, cx } = VerticalScrollListItem_styles.useClasses(classesProp);
  const { activeTheme } = useTheme.useTheme();
  const icon = selected ? /* @__PURE__ */ jsxRuntime.jsx(
    uikitReactIcons.CurrentStep,
    {
      height: activeTheme?.scrollTo.dotSelectedSize,
      width: activeTheme?.scrollTo.dotSelectedSize
    }
  ) : /* @__PURE__ */ jsxRuntime.jsx("div", { className: classes.notSelected });
  const Component = href != null ? "a" : "div";
  return /* @__PURE__ */ jsxRuntime.jsx("li", { id, className: cx(classes.root, className), "aria-current": selected, children: /* @__PURE__ */ jsxRuntime.jsx(Tooltip.HvTooltip, { title: label, placement: tooltipPlacement, children: /* @__PURE__ */ jsxRuntime.jsx(
    Component,
    {
      role: href == null ? "button" : void 0,
      tabIndex: 0,
      onClick,
      onKeyDown,
      className: cx(classes.button, classes.text),
      href,
      ...others,
      children: icon
    }
  ) }) });
};
exports.verticalScrollListItemClasses = VerticalScrollListItem_styles.staticClasses;
exports.HvVerticalScrollListItem = HvVerticalScrollListItem;
