"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const jsxRuntime = require("@emotion/react/jsx-runtime");
const MuiDrawer = require("@mui/material/Drawer");
const uikitReactIcons = require("@hitachivantara/uikit-react-icons");
const useDefaultProps = require("../hooks/useDefaultProps.cjs");
const setId = require("../utils/setId.cjs");
const Drawer_styles = require("./Drawer.styles.cjs");
const IconButton = require("../utils/IconButton/IconButton.cjs");
const _interopDefault = (e) => e && e.__esModule ? e : { default: e };
const MuiDrawer__default = /* @__PURE__ */ _interopDefault(MuiDrawer);
const HvDrawer = (props) => {
  const {
    className,
    classes: classesProp,
    id,
    children,
    open,
    onClose,
    anchor = "right",
    buttonTitle = "Close",
    showBackdrop = true,
    hideBackdrop,
    disableBackdropClick = false,
    ...others
  } = useDefaultProps.useDefaultProps("HvDrawer", props);
  const { classes, cx } = Drawer_styles.useClasses(classesProp);
  const handleOnClose = (event, reason) => {
    if (reason === "backdropClick" && disableBackdropClick)
      return;
    onClose?.(event, reason);
  };
  const shouldHideBackdrop = hideBackdrop ?? !showBackdrop;
  return /* @__PURE__ */ jsxRuntime.jsxs(
    MuiDrawer__default.default,
    {
      className: cx(classes.root, className),
      id,
      anchor,
      open,
      classes: {
        paper: classes.paper
      },
      hideBackdrop: shouldHideBackdrop,
      ...!shouldHideBackdrop && {
        slotProps: {
          backdrop: {
            classes: {
              root: classes.background
            },
            onClick: (event) => {
              if (disableBackdropClick)
                return;
              onClose?.(event, "backdropClick");
            }
          }
        }
      },
      onClose: handleOnClose,
      ...others,
      children: [
        /* @__PURE__ */ jsxRuntime.jsx(
          IconButton.IconButton,
          {
            id: setId.setId(id, "close"),
            className: classes.closeButton,
            variant: "secondaryGhost",
            onClick: onClose,
            title: buttonTitle,
            children: /* @__PURE__ */ jsxRuntime.jsx(uikitReactIcons.Close, { role: "none" })
          }
        ),
        children
      ]
    }
  );
};
exports.drawerClasses = Drawer_styles.staticClasses;
exports.HvDrawer = HvDrawer;
