"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const uikitStyles = require("@hitachivantara/uikit-styles");
const Tooltip = require("@mui/material/Tooltip");
const classes = require("../utils/classes.cjs");
const { staticClasses, useClasses } = classes.createClasses("HvTooltip", {
  root: {},
  tooltip: {},
  tooltipMulti: {},
  popper: {
    [`& .${Tooltip.tooltipClasses.popper}`]: {
      opacity: 1
    },
    [`& .${Tooltip.tooltipClasses.tooltip}`]: {
      fontFamily: uikitStyles.theme.fontFamily.body,
      ...uikitStyles.theme.typography.body,
      display: "flex",
      width: "fit-content",
      maxWidth: 532,
      backgroundColor: uikitStyles.theme.colors.atmo1,
      boxShadow: uikitStyles.theme.colors.shadow,
      padding: 0,
      "& p": {
        display: "-webkit-box",
        width: "fit-content",
        boxOrient: "vertical",
        textOverflow: "ellipsis",
        overflow: "hidden"
      }
    },
    "& $title": {
      padding: "15px 20px",
      borderBottom: `3px solid ${uikitStyles.theme.colors.atmo2}`
    },
    "& $valuesContainer": {
      padding: uikitStyles.theme.space.sm
    },
    "& $values": {
      display: "flex",
      justifyContent: "space-between",
      paddingBottom: "10px",
      "&:last-child": {
        paddingBottom: 0
      }
    },
    "& $color": {
      width: uikitStyles.theme.space.xs
    },
    "& $separator": {
      width: uikitStyles.theme.space.xs
    },
    "& $separatorColor": {
      width: "5px"
    },
    "& $valueWrapper": {
      padding: uikitStyles.theme.space.sm
    },
    "& $tooltip": {
      padding: "15px 20px",
      borderRadius: uikitStyles.theme.radii.round,
      "& p": {
        wordBreak: "break-word"
      }
    }
  },
  title: {},
  valuesContainer: {},
  values: {},
  color: {},
  separatorColor: {},
  separator: {},
  valueWrapper: {}
});
exports.staticClasses = staticClasses;
exports.useClasses = useClasses;
