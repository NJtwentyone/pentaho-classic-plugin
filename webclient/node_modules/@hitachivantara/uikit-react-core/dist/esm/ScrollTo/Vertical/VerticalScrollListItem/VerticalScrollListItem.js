import { jsx } from "@emotion/react/jsx-runtime";
import { CurrentStep } from "@hitachivantara/uikit-react-icons";
import { useTheme } from "../../../hooks/useTheme.js";
import { useDefaultProps } from "../../../hooks/useDefaultProps.js";
import { useClasses } from "./VerticalScrollListItem.styles.js";
import { staticClasses } from "./VerticalScrollListItem.styles.js";
import { HvTooltip } from "../../../Tooltip/Tooltip.js";
const HvVerticalScrollListItem = (props) => {
  const {
    id,
    className,
    classes: classesProp,
    selected,
    label,
    onClick,
    onKeyDown,
    tooltipPlacement = "left",
    href,
    ...others
  } = useDefaultProps("HvVerticalScrollListItem", props);
  const { classes, cx } = useClasses(classesProp);
  const { activeTheme } = useTheme();
  const icon = selected ? /* @__PURE__ */ jsx(
    CurrentStep,
    {
      height: activeTheme?.scrollTo.dotSelectedSize,
      width: activeTheme?.scrollTo.dotSelectedSize
    }
  ) : /* @__PURE__ */ jsx("div", { className: classes.notSelected });
  const Component = href != null ? "a" : "div";
  return /* @__PURE__ */ jsx("li", { id, className: cx(classes.root, className), "aria-current": selected, children: /* @__PURE__ */ jsx(HvTooltip, { title: label, placement: tooltipPlacement, children: /* @__PURE__ */ jsx(
    Component,
    {
      role: href == null ? "button" : void 0,
      tabIndex: 0,
      onClick,
      onKeyDown,
      className: cx(classes.button, classes.text),
      href,
      ...others,
      children: icon
    }
  ) }) });
};
export {
  HvVerticalScrollListItem,
  staticClasses as verticalScrollListItemClasses
};
