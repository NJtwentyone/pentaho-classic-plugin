import { jsx, Fragment } from "@emotion/react/jsx-runtime";
import { useDefaultProps } from "../hooks/useDefaultProps.js";
import { fixedForwardRef } from "../types/generic.js";
import { useClasses } from "./TimeAgo.styles.js";
import { staticClasses } from "./TimeAgo.styles.js";
import useTimeAgo from "./useTimeAgo.js";
import { HvTypography } from "../Typography/Typography.js";
const HvTimeAgo = fixedForwardRef(function HvTimeAgo2(props, ref) {
  const {
    classes: classesProp,
    className,
    timestamp,
    locale: localeProp = "en",
    component: Component = HvTypography,
    emptyElement = "â€”",
    disableRefresh = false,
    showSeconds = false,
    justText = false,
    ...others
  } = useDefaultProps("HvTimeAgo", props);
  const { classes, cx } = useClasses(classesProp);
  const locale = localeProp || "en";
  const timeAgo = useTimeAgo(timestamp, {
    locale,
    disableRefresh,
    showSeconds
  });
  if (justText && timestamp)
    return /* @__PURE__ */ jsx(Fragment, { children: timeAgo });
  return /* @__PURE__ */ jsx(Component, { ref, className: cx(classes.root, className), ...others, children: !timestamp ? emptyElement : timeAgo });
});
export {
  HvTimeAgo,
  staticClasses as timeAgoClasses
};
